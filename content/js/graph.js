/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 202.0, "minX": 0.0, "maxY": 18775.0, "series": [{"data": [[0.0, 406.0], [0.1, 406.0], [0.2, 426.0], [0.3, 426.0], [0.4, 428.0], [0.5, 428.0], [0.6, 428.0], [0.7, 432.0], [0.8, 432.0], [0.9, 432.0], [1.0, 436.0], [1.1, 436.0], [1.2, 437.0], [1.3, 437.0], [1.4, 438.0], [1.5, 438.0], [1.6, 441.0], [1.7, 441.0], [1.8, 442.0], [1.9, 442.0], [2.0, 443.0], [2.1, 443.0], [2.2, 443.0], [2.3, 443.0], [2.4, 444.0], [2.5, 444.0], [2.6, 444.0], [2.7, 444.0], [2.8, 445.0], [2.9, 445.0], [3.0, 446.0], [3.1, 446.0], [3.2, 448.0], [3.3, 448.0], [3.4, 448.0], [3.5, 452.0], [3.6, 452.0], [3.7, 455.0], [3.8, 455.0], [3.9, 456.0], [4.0, 456.0], [4.1, 458.0], [4.2, 458.0], [4.3, 458.0], [4.4, 458.0], [4.5, 459.0], [4.6, 459.0], [4.7, 461.0], [4.8, 461.0], [4.9, 462.0], [5.0, 462.0], [5.1, 463.0], [5.2, 463.0], [5.3, 463.0], [5.4, 463.0], [5.5, 464.0], [5.6, 464.0], [5.7, 464.0], [5.8, 464.0], [5.9, 465.0], [6.0, 465.0], [6.1, 465.0], [6.2, 465.0], [6.3, 465.0], [6.4, 465.0], [6.5, 465.0], [6.6, 465.0], [6.7, 466.0], [6.8, 466.0], [6.9, 467.0], [7.0, 467.0], [7.1, 468.0], [7.2, 468.0], [7.3, 469.0], [7.4, 469.0], [7.5, 469.0], [7.6, 469.0], [7.7, 469.0], [7.8, 469.0], [7.9, 469.0], [8.0, 469.0], [8.1, 470.0], [8.2, 470.0], [8.3, 470.0], [8.4, 470.0], [8.5, 470.0], [8.6, 470.0], [8.7, 470.0], [8.8, 470.0], [8.9, 470.0], [9.0, 470.0], [9.1, 470.0], [9.2, 470.0], [9.3, 471.0], [9.4, 471.0], [9.5, 471.0], [9.6, 471.0], [9.7, 472.0], [9.8, 472.0], [9.9, 472.0], [10.0, 472.0], [10.1, 474.0], [10.2, 474.0], [10.3, 474.0], [10.4, 474.0], [10.5, 474.0], [10.6, 474.0], [10.7, 476.0], [10.8, 476.0], [10.9, 476.0], [11.0, 476.0], [11.1, 476.0], [11.2, 476.0], [11.3, 476.0], [11.4, 476.0], [11.5, 477.0], [11.6, 477.0], [11.7, 477.0], [11.8, 477.0], [11.9, 479.0], [12.0, 479.0], [12.1, 481.0], [12.2, 481.0], [12.3, 481.0], [12.4, 481.0], [12.5, 481.0], [12.6, 481.0], [12.7, 482.0], [12.8, 482.0], [12.9, 483.0], [13.0, 483.0], [13.1, 483.0], [13.2, 483.0], [13.3, 484.0], [13.4, 484.0], [13.5, 484.0], [13.6, 484.0], [13.7, 485.0], [13.8, 485.0], [13.9, 485.0], [14.0, 485.0], [14.1, 485.0], [14.2, 485.0], [14.3, 485.0], [14.4, 485.0], [14.5, 487.0], [14.6, 487.0], [14.7, 488.0], [14.8, 488.0], [14.9, 488.0], [15.0, 488.0], [15.1, 488.0], [15.2, 488.0], [15.3, 488.0], [15.4, 488.0], [15.5, 489.0], [15.6, 489.0], [15.7, 489.0], [15.8, 489.0], [15.9, 489.0], [16.0, 489.0], [16.1, 491.0], [16.2, 491.0], [16.3, 493.0], [16.4, 493.0], [16.5, 494.0], [16.6, 494.0], [16.7, 494.0], [16.8, 494.0], [16.9, 494.0], [17.0, 494.0], [17.1, 495.0], [17.2, 495.0], [17.3, 495.0], [17.4, 495.0], [17.5, 495.0], [17.6, 495.0], [17.7, 495.0], [17.8, 495.0], [17.9, 496.0], [18.0, 496.0], [18.1, 496.0], [18.2, 496.0], [18.3, 496.0], [18.4, 496.0], [18.5, 496.0], [18.6, 496.0], [18.7, 496.0], [18.8, 496.0], [18.9, 497.0], [19.0, 497.0], [19.1, 498.0], [19.2, 498.0], [19.3, 500.0], [19.4, 500.0], [19.5, 500.0], [19.6, 500.0], [19.7, 500.0], [19.8, 500.0], [19.9, 500.0], [20.0, 500.0], [20.1, 502.0], [20.2, 502.0], [20.3, 502.0], [20.4, 502.0], [20.5, 502.0], [20.6, 502.0], [20.7, 502.0], [20.8, 502.0], [20.9, 503.0], [21.0, 503.0], [21.1, 504.0], [21.2, 504.0], [21.3, 504.0], [21.4, 504.0], [21.5, 504.0], [21.6, 504.0], [21.7, 505.0], [21.8, 505.0], [21.9, 506.0], [22.0, 506.0], [22.1, 507.0], [22.2, 507.0], [22.3, 507.0], [22.4, 507.0], [22.5, 507.0], [22.6, 507.0], [22.7, 507.0], [22.8, 507.0], [22.9, 508.0], [23.0, 508.0], [23.1, 509.0], [23.2, 509.0], [23.3, 509.0], [23.4, 509.0], [23.5, 510.0], [23.6, 510.0], [23.7, 510.0], [23.8, 510.0], [23.9, 510.0], [24.0, 510.0], [24.1, 511.0], [24.2, 511.0], [24.3, 512.0], [24.4, 512.0], [24.5, 512.0], [24.6, 514.0], [24.7, 514.0], [24.8, 514.0], [24.9, 514.0], [25.0, 515.0], [25.1, 515.0], [25.2, 515.0], [25.3, 515.0], [25.4, 516.0], [25.5, 516.0], [25.6, 516.0], [25.7, 516.0], [25.8, 516.0], [25.9, 516.0], [26.0, 516.0], [26.1, 516.0], [26.2, 517.0], [26.3, 517.0], [26.4, 518.0], [26.5, 518.0], [26.6, 518.0], [26.7, 518.0], [26.8, 518.0], [26.9, 518.0], [27.0, 519.0], [27.1, 519.0], [27.2, 520.0], [27.3, 520.0], [27.4, 521.0], [27.5, 521.0], [27.6, 521.0], [27.7, 521.0], [27.8, 521.0], [27.9, 521.0], [28.0, 521.0], [28.1, 521.0], [28.2, 522.0], [28.3, 522.0], [28.4, 522.0], [28.5, 522.0], [28.6, 522.0], [28.7, 522.0], [28.8, 522.0], [28.9, 522.0], [29.0, 523.0], [29.1, 523.0], [29.2, 523.0], [29.3, 523.0], [29.4, 523.0], [29.5, 523.0], [29.6, 523.0], [29.7, 523.0], [29.8, 524.0], [29.9, 524.0], [30.0, 524.0], [30.1, 524.0], [30.2, 524.0], [30.3, 524.0], [30.4, 524.0], [30.5, 524.0], [30.6, 524.0], [30.7, 524.0], [30.8, 526.0], [30.9, 526.0], [31.0, 526.0], [31.1, 526.0], [31.2, 526.0], [31.3, 526.0], [31.4, 526.0], [31.5, 527.0], [31.6, 527.0], [31.7, 527.0], [31.8, 528.0], [31.9, 528.0], [32.0, 528.0], [32.1, 528.0], [32.2, 529.0], [32.3, 529.0], [32.4, 529.0], [32.5, 529.0], [32.6, 529.0], [32.7, 529.0], [32.8, 529.0], [32.9, 529.0], [33.0, 530.0], [33.1, 530.0], [33.2, 531.0], [33.3, 531.0], [33.4, 531.0], [33.5, 531.0], [33.6, 533.0], [33.7, 533.0], [33.8, 533.0], [33.9, 533.0], [34.0, 533.0], [34.1, 533.0], [34.2, 533.0], [34.3, 533.0], [34.4, 533.0], [34.5, 533.0], [34.6, 534.0], [34.7, 534.0], [34.8, 534.0], [34.9, 534.0], [35.0, 534.0], [35.1, 534.0], [35.2, 535.0], [35.3, 535.0], [35.4, 535.0], [35.5, 535.0], [35.6, 535.0], [35.7, 535.0], [35.8, 535.0], [35.9, 535.0], [36.0, 536.0], [36.1, 536.0], [36.2, 537.0], [36.3, 537.0], [36.4, 537.0], [36.5, 537.0], [36.6, 537.0], [36.7, 537.0], [36.8, 537.0], [36.9, 538.0], [37.0, 538.0], [37.1, 538.0], [37.2, 538.0], [37.3, 538.0], [37.4, 538.0], [37.5, 539.0], [37.6, 539.0], [37.7, 540.0], [37.8, 540.0], [37.9, 540.0], [38.0, 540.0], [38.1, 540.0], [38.2, 540.0], [38.3, 541.0], [38.4, 541.0], [38.5, 541.0], [38.6, 541.0], [38.7, 542.0], [38.8, 542.0], [38.9, 544.0], [39.0, 544.0], [39.1, 545.0], [39.2, 545.0], [39.3, 545.0], [39.4, 545.0], [39.5, 545.0], [39.6, 545.0], [39.7, 545.0], [39.8, 545.0], [39.9, 548.0], [40.0, 548.0], [40.1, 549.0], [40.2, 549.0], [40.3, 549.0], [40.4, 549.0], [40.5, 549.0], [40.6, 549.0], [40.7, 550.0], [40.8, 550.0], [40.9, 550.0], [41.0, 550.0], [41.1, 551.0], [41.2, 551.0], [41.3, 551.0], [41.4, 551.0], [41.5, 551.0], [41.6, 551.0], [41.7, 552.0], [41.8, 552.0], [41.9, 552.0], [42.0, 552.0], [42.1, 552.0], [42.2, 552.0], [42.3, 553.0], [42.4, 553.0], [42.5, 553.0], [42.6, 553.0], [42.7, 553.0], [42.8, 553.0], [42.9, 554.0], [43.0, 554.0], [43.1, 555.0], [43.2, 555.0], [43.3, 555.0], [43.4, 555.0], [43.5, 555.0], [43.6, 555.0], [43.7, 555.0], [43.8, 555.0], [43.9, 557.0], [44.0, 557.0], [44.1, 557.0], [44.2, 557.0], [44.3, 558.0], [44.4, 558.0], [44.5, 558.0], [44.6, 558.0], [44.7, 558.0], [44.8, 558.0], [44.9, 560.0], [45.0, 560.0], [45.1, 561.0], [45.2, 561.0], [45.3, 562.0], [45.4, 562.0], [45.5, 562.0], [45.6, 562.0], [45.7, 562.0], [45.8, 562.0], [45.9, 562.0], [46.0, 562.0], [46.1, 563.0], [46.2, 563.0], [46.3, 565.0], [46.4, 565.0], [46.5, 568.0], [46.6, 568.0], [46.7, 568.0], [46.8, 568.0], [46.9, 568.0], [47.0, 568.0], [47.1, 569.0], [47.2, 569.0], [47.3, 569.0], [47.4, 569.0], [47.5, 570.0], [47.6, 570.0], [47.7, 570.0], [47.8, 570.0], [47.9, 570.0], [48.0, 570.0], [48.1, 571.0], [48.2, 571.0], [48.3, 572.0], [48.4, 572.0], [48.5, 572.0], [48.6, 572.0], [48.7, 573.0], [48.8, 573.0], [48.9, 573.0], [49.0, 573.0], [49.1, 575.0], [49.2, 575.0], [49.3, 576.0], [49.4, 576.0], [49.5, 576.0], [49.6, 576.0], [49.7, 578.0], [49.8, 578.0], [49.9, 578.0], [50.0, 578.0], [50.1, 579.0], [50.2, 579.0], [50.3, 579.0], [50.4, 579.0], [50.5, 580.0], [50.6, 580.0], [50.7, 581.0], [50.8, 581.0], [50.9, 581.0], [51.0, 581.0], [51.1, 581.0], [51.2, 581.0], [51.3, 582.0], [51.4, 582.0], [51.5, 583.0], [51.6, 583.0], [51.7, 583.0], [51.8, 583.0], [51.9, 584.0], [52.0, 584.0], [52.1, 584.0], [52.2, 584.0], [52.3, 584.0], [52.4, 584.0], [52.5, 585.0], [52.6, 585.0], [52.7, 586.0], [52.8, 586.0], [52.9, 586.0], [53.0, 586.0], [53.1, 586.0], [53.2, 586.0], [53.3, 587.0], [53.4, 587.0], [53.5, 587.0], [53.6, 587.0], [53.7, 587.0], [53.8, 587.0], [53.9, 590.0], [54.0, 590.0], [54.1, 590.0], [54.2, 590.0], [54.3, 592.0], [54.4, 592.0], [54.5, 593.0], [54.6, 593.0], [54.7, 594.0], [54.8, 594.0], [54.9, 596.0], [55.0, 596.0], [55.1, 596.0], [55.2, 596.0], [55.3, 596.0], [55.4, 596.0], [55.5, 598.0], [55.6, 598.0], [55.7, 599.0], [55.8, 599.0], [55.9, 599.0], [56.0, 599.0], [56.1, 600.0], [56.2, 600.0], [56.3, 601.0], [56.4, 601.0], [56.5, 601.0], [56.6, 601.0], [56.7, 603.0], [56.8, 603.0], [56.9, 604.0], [57.0, 604.0], [57.1, 605.0], [57.2, 605.0], [57.3, 606.0], [57.4, 606.0], [57.5, 606.0], [57.6, 606.0], [57.7, 607.0], [57.8, 607.0], [57.9, 608.0], [58.0, 608.0], [58.1, 608.0], [58.2, 608.0], [58.3, 608.0], [58.4, 608.0], [58.5, 609.0], [58.6, 609.0], [58.7, 610.0], [58.8, 610.0], [58.9, 612.0], [59.0, 612.0], [59.1, 613.0], [59.2, 613.0], [59.3, 615.0], [59.4, 615.0], [59.5, 617.0], [59.6, 617.0], [59.7, 618.0], [59.8, 618.0], [59.9, 618.0], [60.0, 618.0], [60.1, 620.0], [60.2, 620.0], [60.3, 620.0], [60.4, 620.0], [60.5, 621.0], [60.6, 621.0], [60.7, 621.0], [60.8, 621.0], [60.9, 621.0], [61.0, 621.0], [61.1, 622.0], [61.2, 622.0], [61.3, 624.0], [61.4, 624.0], [61.5, 625.0], [61.6, 625.0], [61.7, 625.0], [61.8, 625.0], [61.9, 626.0], [62.0, 626.0], [62.1, 628.0], [62.2, 628.0], [62.3, 629.0], [62.4, 629.0], [62.5, 630.0], [62.6, 630.0], [62.7, 631.0], [62.8, 631.0], [62.9, 632.0], [63.0, 632.0], [63.1, 632.0], [63.2, 632.0], [63.3, 633.0], [63.4, 633.0], [63.5, 634.0], [63.6, 634.0], [63.7, 634.0], [63.8, 634.0], [63.9, 636.0], [64.0, 636.0], [64.1, 636.0], [64.2, 636.0], [64.3, 639.0], [64.4, 639.0], [64.5, 639.0], [64.6, 639.0], [64.7, 639.0], [64.8, 639.0], [64.9, 641.0], [65.0, 641.0], [65.1, 642.0], [65.2, 642.0], [65.3, 642.0], [65.4, 642.0], [65.5, 643.0], [65.6, 643.0], [65.7, 648.0], [65.8, 648.0], [65.9, 649.0], [66.0, 649.0], [66.1, 652.0], [66.2, 652.0], [66.3, 653.0], [66.4, 653.0], [66.5, 656.0], [66.6, 656.0], [66.7, 656.0], [66.8, 656.0], [66.9, 659.0], [67.0, 659.0], [67.1, 659.0], [67.2, 659.0], [67.3, 659.0], [67.4, 659.0], [67.5, 660.0], [67.6, 660.0], [67.7, 660.0], [67.8, 660.0], [67.9, 662.0], [68.0, 662.0], [68.1, 665.0], [68.2, 665.0], [68.3, 665.0], [68.4, 665.0], [68.5, 665.0], [68.6, 665.0], [68.7, 666.0], [68.8, 666.0], [68.9, 666.0], [69.0, 666.0], [69.1, 667.0], [69.2, 667.0], [69.3, 668.0], [69.4, 668.0], [69.5, 669.0], [69.6, 669.0], [69.7, 671.0], [69.8, 671.0], [69.9, 671.0], [70.0, 671.0], [70.1, 671.0], [70.2, 671.0], [70.3, 671.0], [70.4, 671.0], [70.5, 676.0], [70.6, 676.0], [70.7, 677.0], [70.8, 677.0], [70.9, 677.0], [71.0, 677.0], [71.1, 678.0], [71.2, 678.0], [71.3, 679.0], [71.4, 679.0], [71.5, 682.0], [71.6, 682.0], [71.7, 683.0], [71.8, 683.0], [71.9, 686.0], [72.0, 686.0], [72.1, 686.0], [72.2, 686.0], [72.3, 686.0], [72.4, 686.0], [72.5, 692.0], [72.6, 692.0], [72.7, 692.0], [72.8, 692.0], [72.9, 697.0], [73.0, 697.0], [73.1, 701.0], [73.2, 701.0], [73.3, 708.0], [73.4, 708.0], [73.5, 709.0], [73.6, 709.0], [73.7, 709.0], [73.8, 709.0], [73.9, 711.0], [74.0, 711.0], [74.1, 711.0], [74.2, 711.0], [74.3, 718.0], [74.4, 718.0], [74.5, 719.0], [74.6, 719.0], [74.7, 719.0], [74.8, 719.0], [74.9, 720.0], [75.0, 720.0], [75.1, 721.0], [75.2, 721.0], [75.3, 724.0], [75.4, 724.0], [75.5, 724.0], [75.6, 724.0], [75.7, 733.0], [75.8, 733.0], [75.9, 739.0], [76.0, 739.0], [76.1, 739.0], [76.2, 739.0], [76.3, 744.0], [76.4, 744.0], [76.5, 750.0], [76.6, 750.0], [76.7, 751.0], [76.8, 751.0], [76.9, 756.0], [77.0, 756.0], [77.1, 766.0], [77.2, 766.0], [77.3, 774.0], [77.4, 774.0], [77.5, 775.0], [77.6, 775.0], [77.7, 777.0], [77.8, 777.0], [77.9, 777.0], [78.0, 777.0], [78.1, 779.0], [78.2, 779.0], [78.3, 784.0], [78.4, 784.0], [78.5, 789.0], [78.6, 789.0], [78.7, 800.0], [78.8, 800.0], [78.9, 819.0], [79.0, 819.0], [79.1, 822.0], [79.2, 822.0], [79.3, 836.0], [79.4, 836.0], [79.5, 849.0], [79.6, 849.0], [79.7, 852.0], [79.8, 852.0], [79.9, 858.0], [80.0, 858.0], [80.1, 860.0], [80.2, 860.0], [80.3, 865.0], [80.4, 865.0], [80.5, 877.0], [80.6, 877.0], [80.7, 886.0], [80.8, 886.0], [80.9, 888.0], [81.0, 888.0], [81.1, 891.0], [81.2, 891.0], [81.3, 895.0], [81.4, 895.0], [81.5, 907.0], [81.6, 907.0], [81.7, 916.0], [81.8, 916.0], [81.9, 920.0], [82.0, 920.0], [82.1, 939.0], [82.2, 939.0], [82.3, 939.0], [82.4, 939.0], [82.5, 946.0], [82.6, 946.0], [82.7, 948.0], [82.8, 948.0], [82.9, 957.0], [83.0, 957.0], [83.1, 968.0], [83.2, 968.0], [83.3, 980.0], [83.4, 980.0], [83.5, 980.0], [83.6, 980.0], [83.7, 996.0], [83.8, 996.0], [83.9, 1018.0], [84.0, 1018.0], [84.1, 1020.0], [84.2, 1020.0], [84.3, 1029.0], [84.4, 1029.0], [84.5, 1057.0], [84.6, 1057.0], [84.7, 1060.0], [84.8, 1060.0], [84.9, 1063.0], [85.0, 1063.0], [85.1, 1069.0], [85.2, 1069.0], [85.3, 1077.0], [85.4, 1077.0], [85.5, 1083.0], [85.6, 1083.0], [85.7, 1125.0], [85.8, 1125.0], [85.9, 1134.0], [86.0, 1134.0], [86.1, 1138.0], [86.2, 1138.0], [86.3, 1141.0], [86.4, 1141.0], [86.5, 1174.0], [86.6, 1174.0], [86.7, 1182.0], [86.8, 1182.0], [86.9, 1192.0], [87.0, 1192.0], [87.1, 1197.0], [87.2, 1197.0], [87.3, 1198.0], [87.4, 1198.0], [87.5, 1208.0], [87.6, 1208.0], [87.7, 1210.0], [87.8, 1210.0], [87.9, 1213.0], [88.0, 1213.0], [88.1, 1230.0], [88.2, 1230.0], [88.3, 1256.0], [88.4, 1256.0], [88.5, 1258.0], [88.6, 1258.0], [88.7, 1265.0], [88.8, 1265.0], [88.9, 1266.0], [89.0, 1266.0], [89.1, 1270.0], [89.2, 1270.0], [89.3, 1271.0], [89.4, 1271.0], [89.5, 1272.0], [89.6, 1272.0], [89.7, 1277.0], [89.8, 1277.0], [89.9, 1281.0], [90.0, 1281.0], [90.1, 1283.0], [90.2, 1283.0], [90.3, 1285.0], [90.4, 1285.0], [90.5, 1287.0], [90.6, 1287.0], [90.7, 1289.0], [90.8, 1289.0], [90.9, 1290.0], [91.0, 1290.0], [91.1, 1292.0], [91.2, 1292.0], [91.3, 1301.0], [91.4, 1301.0], [91.5, 1318.0], [91.6, 1318.0], [91.7, 1320.0], [91.8, 1320.0], [91.9, 1322.0], [92.0, 1322.0], [92.1, 1324.0], [92.2, 1324.0], [92.3, 1340.0], [92.4, 1340.0], [92.5, 1342.0], [92.6, 1342.0], [92.7, 1342.0], [92.8, 1342.0], [92.9, 1361.0], [93.0, 1361.0], [93.1, 1368.0], [93.2, 1368.0], [93.3, 1379.0], [93.4, 1379.0], [93.5, 1384.0], [93.6, 1384.0], [93.7, 1399.0], [93.8, 1399.0], [93.9, 1399.0], [94.0, 1399.0], [94.1, 1400.0], [94.2, 1400.0], [94.3, 1400.0], [94.4, 1400.0], [94.5, 1401.0], [94.6, 1401.0], [94.7, 1403.0], [94.8, 1403.0], [94.9, 1404.0], [95.0, 1404.0], [95.1, 1441.0], [95.2, 1441.0], [95.3, 1456.0], [95.4, 1456.0], [95.5, 1482.0], [95.6, 1482.0], [95.7, 1497.0], [95.8, 1497.0], [95.9, 1506.0], [96.0, 1506.0], [96.1, 1520.0], [96.2, 1520.0], [96.3, 1522.0], [96.4, 1522.0], [96.5, 1526.0], [96.6, 1526.0], [96.7, 1544.0], [96.8, 1544.0], [96.9, 1560.0], [97.0, 1560.0], [97.1, 1561.0], [97.2, 1561.0], [97.3, 1589.0], [97.4, 1589.0], [97.5, 1607.0], [97.6, 1607.0], [97.7, 1611.0], [97.8, 1611.0], [97.9, 1627.0], [98.0, 1627.0], [98.1, 1639.0], [98.2, 1639.0], [98.3, 1641.0], [98.4, 1641.0], [98.5, 1841.0], [98.6, 1841.0], [98.7, 2127.0], [98.8, 2127.0], [98.9, 3286.0], [99.0, 3286.0], [99.1, 4093.0], [99.2, 4093.0], [99.3, 4783.0], [99.4, 4783.0], [99.5, 7128.0], [99.6, 7128.0], [99.7, 8606.0], [99.8, 8606.0], [99.9, 18775.0], [100.0, 18775.0]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[0.0, 203.0], [0.1, 203.0], [0.2, 203.0], [0.3, 203.0], [0.4, 206.0], [0.5, 206.0], [0.6, 206.0], [0.7, 207.0], [0.8, 208.0], [0.9, 208.0], [1.0, 208.0], [1.1, 208.0], [1.2, 208.0], [1.3, 212.0], [1.4, 212.0], [1.5, 213.0], [1.6, 215.0], [1.7, 215.0], [1.8, 216.0], [1.9, 216.0], [2.0, 218.0], [2.1, 218.0], [2.2, 218.0], [2.3, 218.0], [2.4, 218.0], [2.5, 218.0], [2.6, 218.0], [2.7, 218.0], [2.8, 219.0], [2.9, 219.0], [3.0, 219.0], [3.1, 219.0], [3.2, 219.0], [3.3, 219.0], [3.4, 220.0], [3.5, 220.0], [3.6, 220.0], [3.7, 220.0], [3.8, 220.0], [3.9, 220.0], [4.0, 221.0], [4.1, 221.0], [4.2, 222.0], [4.3, 222.0], [4.4, 222.0], [4.5, 222.0], [4.6, 222.0], [4.7, 222.0], [4.8, 224.0], [4.9, 224.0], [5.0, 224.0], [5.1, 224.0], [5.2, 224.0], [5.3, 224.0], [5.4, 225.0], [5.5, 225.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 226.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 227.0], [6.5, 227.0], [6.6, 228.0], [6.7, 228.0], [6.8, 228.0], [6.9, 228.0], [7.0, 228.0], [7.1, 228.0], [7.2, 228.0], [7.3, 228.0], [7.4, 229.0], [7.5, 229.0], [7.6, 229.0], [7.7, 229.0], [7.8, 229.0], [7.9, 229.0], [8.0, 230.0], [8.1, 230.0], [8.2, 230.0], [8.3, 230.0], [8.4, 231.0], [8.5, 231.0], [8.6, 231.0], [8.7, 231.0], [8.8, 231.0], [8.9, 231.0], [9.0, 231.0], [9.1, 231.0], [9.2, 231.0], [9.3, 231.0], [9.4, 232.0], [9.5, 232.0], [9.6, 232.0], [9.7, 232.0], [9.8, 232.0], [9.9, 232.0], [10.0, 232.0], [10.1, 232.0], [10.2, 232.0], [10.3, 232.0], [10.4, 233.0], [10.5, 233.0], [10.6, 233.0], [10.7, 233.0], [10.8, 233.0], [10.9, 233.0], [11.0, 233.0], [11.1, 233.0], [11.2, 233.0], [11.3, 233.0], [11.4, 233.0], [11.5, 233.0], [11.6, 233.0], [11.7, 233.0], [11.8, 234.0], [11.9, 234.0], [12.0, 234.0], [12.1, 234.0], [12.2, 234.0], [12.3, 234.0], [12.4, 234.0], [12.5, 234.0], [12.6, 234.0], [12.7, 234.0], [12.8, 235.0], [12.9, 235.0], [13.0, 235.0], [13.1, 235.0], [13.2, 235.0], [13.3, 235.0], [13.4, 236.0], [13.5, 236.0], [13.6, 236.0], [13.7, 236.0], [13.8, 236.0], [13.9, 236.0], [14.0, 237.0], [14.1, 237.0], [14.2, 237.0], [14.3, 237.0], [14.4, 237.0], [14.5, 237.0], [14.6, 237.0], [14.7, 237.0], [14.8, 237.0], [14.9, 237.0], [15.0, 238.0], [15.1, 238.0], [15.2, 238.0], [15.3, 238.0], [15.4, 238.0], [15.5, 238.0], [15.6, 238.0], [15.7, 238.0], [15.8, 238.0], [15.9, 238.0], [16.0, 238.0], [16.1, 238.0], [16.2, 238.0], [16.3, 238.0], [16.4, 238.0], [16.5, 238.0], [16.6, 238.0], [16.7, 238.0], [16.8, 238.0], [16.9, 238.0], [17.0, 239.0], [17.1, 239.0], [17.2, 239.0], [17.3, 239.0], [17.4, 239.0], [17.5, 239.0], [17.6, 240.0], [17.7, 240.0], [17.8, 240.0], [17.9, 240.0], [18.0, 241.0], [18.1, 241.0], [18.2, 241.0], [18.3, 241.0], [18.4, 242.0], [18.5, 242.0], [18.6, 242.0], [18.7, 242.0], [18.8, 242.0], [18.9, 242.0], [19.0, 242.0], [19.1, 242.0], [19.2, 242.0], [19.3, 242.0], [19.4, 243.0], [19.5, 243.0], [19.6, 243.0], [19.7, 243.0], [19.8, 243.0], [19.9, 243.0], [20.0, 243.0], [20.1, 243.0], [20.2, 243.0], [20.3, 243.0], [20.4, 243.0], [20.5, 243.0], [20.6, 244.0], [20.7, 244.0], [20.8, 244.0], [20.9, 244.0], [21.0, 244.0], [21.1, 244.0], [21.2, 244.0], [21.3, 244.0], [21.4, 245.0], [21.5, 245.0], [21.6, 245.0], [21.7, 245.0], [21.8, 245.0], [21.9, 245.0], [22.0, 245.0], [22.1, 245.0], [22.2, 245.0], [22.3, 245.0], [22.4, 245.0], [22.5, 245.0], [22.6, 245.0], [22.7, 245.0], [22.8, 245.0], [22.9, 245.0], [23.0, 245.0], [23.1, 245.0], [23.2, 245.0], [23.3, 245.0], [23.4, 246.0], [23.5, 246.0], [23.6, 246.0], [23.7, 246.0], [23.8, 246.0], [23.9, 246.0], [24.0, 247.0], [24.1, 247.0], [24.2, 247.0], [24.3, 247.0], [24.4, 247.0], [24.5, 247.0], [24.6, 247.0], [24.7, 247.0], [24.8, 247.0], [24.9, 247.0], [25.0, 248.0], [25.1, 248.0], [25.2, 248.0], [25.3, 248.0], [25.4, 249.0], [25.5, 249.0], [25.6, 249.0], [25.7, 249.0], [25.8, 249.0], [25.9, 249.0], [26.0, 249.0], [26.1, 249.0], [26.2, 249.0], [26.3, 249.0], [26.4, 250.0], [26.5, 250.0], [26.6, 250.0], [26.7, 250.0], [26.8, 250.0], [26.9, 250.0], [27.0, 250.0], [27.1, 250.0], [27.2, 251.0], [27.3, 251.0], [27.4, 251.0], [27.5, 251.0], [27.6, 251.0], [27.7, 251.0], [27.8, 251.0], [27.9, 251.0], [28.0, 252.0], [28.1, 252.0], [28.2, 252.0], [28.3, 252.0], [28.4, 252.0], [28.5, 252.0], [28.6, 252.0], [28.7, 252.0], [28.8, 252.0], [28.9, 252.0], [29.0, 253.0], [29.1, 253.0], [29.2, 253.0], [29.3, 253.0], [29.4, 253.0], [29.5, 253.0], [29.6, 254.0], [29.7, 254.0], [29.8, 254.0], [29.9, 254.0], [30.0, 254.0], [30.1, 254.0], [30.2, 254.0], [30.3, 254.0], [30.4, 254.0], [30.5, 255.0], [30.6, 255.0], [30.7, 255.0], [30.8, 255.0], [30.9, 255.0], [31.0, 255.0], [31.1, 256.0], [31.2, 256.0], [31.3, 256.0], [31.4, 256.0], [31.5, 256.0], [31.6, 256.0], [31.7, 257.0], [31.8, 257.0], [31.9, 257.0], [32.0, 257.0], [32.1, 257.0], [32.2, 257.0], [32.3, 257.0], [32.4, 257.0], [32.5, 257.0], [32.6, 257.0], [32.7, 258.0], [32.8, 258.0], [32.9, 258.0], [33.0, 258.0], [33.1, 258.0], [33.2, 258.0], [33.3, 258.0], [33.4, 258.0], [33.5, 258.0], [33.6, 258.0], [33.7, 258.0], [33.8, 258.0], [33.9, 259.0], [34.0, 259.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 261.0], [35.4, 261.0], [35.5, 262.0], [35.6, 262.0], [35.7, 262.0], [35.8, 262.0], [35.9, 262.0], [36.0, 262.0], [36.1, 262.0], [36.2, 262.0], [36.3, 263.0], [36.4, 263.0], [36.5, 263.0], [36.6, 263.0], [36.7, 263.0], [36.8, 263.0], [36.9, 263.0], [37.0, 263.0], [37.1, 264.0], [37.2, 264.0], [37.3, 264.0], [37.4, 264.0], [37.5, 265.0], [37.6, 265.0], [37.7, 265.0], [37.8, 265.0], [37.9, 265.0], [38.0, 265.0], [38.1, 266.0], [38.2, 266.0], [38.3, 266.0], [38.4, 266.0], [38.5, 266.0], [38.6, 266.0], [38.7, 266.0], [38.8, 266.0], [38.9, 267.0], [39.0, 267.0], [39.1, 268.0], [39.2, 268.0], [39.3, 268.0], [39.4, 268.0], [39.5, 268.0], [39.6, 268.0], [39.7, 268.0], [39.8, 268.0], [39.9, 269.0], [40.0, 269.0], [40.1, 269.0], [40.2, 269.0], [40.3, 269.0], [40.4, 269.0], [40.5, 269.0], [40.6, 269.0], [40.7, 269.0], [40.8, 269.0], [40.9, 269.0], [41.0, 269.0], [41.1, 269.0], [41.2, 269.0], [41.3, 270.0], [41.4, 270.0], [41.5, 270.0], [41.6, 270.0], [41.7, 270.0], [41.8, 270.0], [41.9, 270.0], [42.0, 270.0], [42.1, 270.0], [42.2, 270.0], [42.3, 270.0], [42.4, 270.0], [42.5, 270.0], [42.6, 270.0], [42.7, 270.0], [42.8, 270.0], [42.9, 271.0], [43.0, 271.0], [43.1, 272.0], [43.2, 272.0], [43.3, 272.0], [43.4, 272.0], [43.5, 272.0], [43.6, 272.0], [43.7, 273.0], [43.8, 273.0], [43.9, 273.0], [44.0, 273.0], [44.1, 274.0], [44.2, 274.0], [44.3, 274.0], [44.4, 274.0], [44.5, 274.0], [44.6, 274.0], [44.7, 275.0], [44.8, 275.0], [44.9, 275.0], [45.0, 275.0], [45.1, 275.0], [45.2, 275.0], [45.3, 275.0], [45.4, 275.0], [45.5, 276.0], [45.6, 276.0], [45.7, 276.0], [45.8, 276.0], [45.9, 276.0], [46.0, 276.0], [46.1, 276.0], [46.2, 276.0], [46.3, 276.0], [46.4, 276.0], [46.5, 276.0], [46.6, 276.0], [46.7, 277.0], [46.8, 277.0], [46.9, 277.0], [47.0, 277.0], [47.1, 278.0], [47.2, 278.0], [47.3, 278.0], [47.4, 278.0], [47.5, 278.0], [47.6, 278.0], [47.7, 278.0], [47.8, 278.0], [47.9, 278.0], [48.0, 278.0], [48.1, 279.0], [48.2, 279.0], [48.3, 279.0], [48.4, 279.0], [48.5, 281.0], [48.6, 281.0], [48.7, 281.0], [48.8, 281.0], [48.9, 281.0], [49.0, 281.0], [49.1, 281.0], [49.2, 281.0], [49.3, 281.0], [49.4, 281.0], [49.5, 281.0], [49.6, 281.0], [49.7, 283.0], [49.8, 283.0], [49.9, 283.0], [50.0, 283.0], [50.1, 283.0], [50.2, 283.0], [50.3, 283.0], [50.4, 283.0], [50.5, 283.0], [50.6, 283.0], [50.7, 283.0], [50.8, 283.0], [50.9, 284.0], [51.0, 284.0], [51.1, 285.0], [51.2, 285.0], [51.3, 285.0], [51.4, 285.0], [51.5, 285.0], [51.6, 285.0], [51.7, 285.0], [51.8, 285.0], [51.9, 285.0], [52.0, 285.0], [52.1, 286.0], [52.2, 286.0], [52.3, 286.0], [52.4, 286.0], [52.5, 287.0], [52.6, 287.0], [52.7, 288.0], [52.8, 288.0], [52.9, 288.0], [53.0, 288.0], [53.1, 288.0], [53.2, 288.0], [53.3, 289.0], [53.4, 289.0], [53.5, 289.0], [53.6, 289.0], [53.7, 289.0], [53.8, 289.0], [53.9, 290.0], [54.0, 290.0], [54.1, 290.0], [54.2, 290.0], [54.3, 290.0], [54.4, 290.0], [54.5, 290.0], [54.6, 290.0], [54.7, 291.0], [54.8, 291.0], [54.9, 292.0], [55.0, 292.0], [55.1, 292.0], [55.2, 292.0], [55.3, 292.0], [55.4, 292.0], [55.5, 293.0], [55.6, 293.0], [55.7, 294.0], [55.8, 294.0], [55.9, 294.0], [56.0, 294.0], [56.1, 295.0], [56.2, 295.0], [56.3, 295.0], [56.4, 295.0], [56.5, 295.0], [56.6, 295.0], [56.7, 295.0], [56.8, 295.0], [56.9, 295.0], [57.0, 295.0], [57.1, 296.0], [57.2, 296.0], [57.3, 296.0], [57.4, 296.0], [57.5, 297.0], [57.6, 297.0], [57.7, 297.0], [57.8, 297.0], [57.9, 297.0], [58.0, 297.0], [58.1, 297.0], [58.2, 297.0], [58.3, 298.0], [58.4, 298.0], [58.5, 298.0], [58.6, 298.0], [58.7, 298.0], [58.8, 298.0], [58.9, 298.0], [59.0, 298.0], [59.1, 298.0], [59.2, 298.0], [59.3, 298.0], [59.4, 298.0], [59.5, 300.0], [59.6, 300.0], [59.7, 300.0], [59.8, 300.0], [59.9, 300.0], [60.0, 300.0], [60.1, 300.0], [60.2, 300.0], [60.3, 301.0], [60.4, 301.0], [60.5, 301.0], [60.6, 301.0], [60.7, 302.0], [60.8, 302.0], [60.9, 302.0], [61.0, 302.0], [61.1, 302.0], [61.2, 302.0], [61.3, 303.0], [61.4, 303.0], [61.5, 303.0], [61.6, 303.0], [61.7, 303.0], [61.8, 303.0], [61.9, 303.0], [62.0, 303.0], [62.1, 304.0], [62.2, 304.0], [62.3, 304.0], [62.4, 304.0], [62.5, 305.0], [62.6, 305.0], [62.7, 305.0], [62.8, 305.0], [62.9, 305.0], [63.0, 305.0], [63.1, 306.0], [63.2, 306.0], [63.3, 306.0], [63.4, 306.0], [63.5, 306.0], [63.6, 306.0], [63.7, 306.0], [63.8, 306.0], [63.9, 307.0], [64.0, 307.0], [64.1, 308.0], [64.2, 308.0], [64.3, 309.0], [64.4, 309.0], [64.5, 310.0], [64.6, 310.0], [64.7, 311.0], [64.8, 311.0], [64.9, 311.0], [65.0, 311.0], [65.1, 311.0], [65.2, 311.0], [65.3, 311.0], [65.4, 311.0], [65.5, 312.0], [65.6, 312.0], [65.7, 313.0], [65.8, 313.0], [65.9, 313.0], [66.0, 313.0], [66.1, 314.0], [66.2, 314.0], [66.3, 314.0], [66.4, 314.0], [66.5, 314.0], [66.6, 314.0], [66.7, 315.0], [66.8, 315.0], [66.9, 315.0], [67.0, 315.0], [67.1, 316.0], [67.2, 316.0], [67.3, 316.0], [67.4, 316.0], [67.5, 317.0], [67.6, 317.0], [67.7, 317.0], [67.8, 317.0], [67.9, 318.0], [68.0, 318.0], [68.1, 319.0], [68.2, 319.0], [68.3, 319.0], [68.4, 319.0], [68.5, 319.0], [68.6, 319.0], [68.7, 320.0], [68.8, 320.0], [68.9, 321.0], [69.0, 321.0], [69.1, 321.0], [69.2, 321.0], [69.3, 321.0], [69.4, 321.0], [69.5, 321.0], [69.6, 321.0], [69.7, 321.0], [69.8, 321.0], [69.9, 322.0], [70.0, 322.0], [70.1, 323.0], [70.2, 323.0], [70.3, 323.0], [70.4, 323.0], [70.5, 323.0], [70.6, 323.0], [70.7, 323.0], [70.8, 323.0], [70.9, 324.0], [71.0, 324.0], [71.1, 324.0], [71.2, 324.0], [71.3, 324.0], [71.4, 324.0], [71.5, 325.0], [71.6, 325.0], [71.7, 325.0], [71.8, 325.0], [71.9, 325.0], [72.0, 325.0], [72.1, 325.0], [72.2, 325.0], [72.3, 327.0], [72.4, 327.0], [72.5, 328.0], [72.6, 328.0], [72.7, 329.0], [72.8, 329.0], [72.9, 329.0], [73.0, 329.0], [73.1, 330.0], [73.2, 330.0], [73.3, 330.0], [73.4, 330.0], [73.5, 331.0], [73.6, 331.0], [73.7, 332.0], [73.8, 332.0], [73.9, 333.0], [74.0, 333.0], [74.1, 333.0], [74.2, 333.0], [74.3, 334.0], [74.4, 334.0], [74.5, 334.0], [74.6, 334.0], [74.7, 334.0], [74.8, 334.0], [74.9, 334.0], [75.0, 334.0], [75.1, 334.0], [75.2, 334.0], [75.3, 335.0], [75.4, 335.0], [75.5, 336.0], [75.6, 336.0], [75.7, 338.0], [75.8, 338.0], [75.9, 342.0], [76.0, 342.0], [76.1, 342.0], [76.2, 342.0], [76.3, 342.0], [76.4, 342.0], [76.5, 343.0], [76.6, 343.0], [76.7, 345.0], [76.8, 345.0], [76.9, 345.0], [77.0, 345.0], [77.1, 345.0], [77.2, 345.0], [77.3, 347.0], [77.4, 347.0], [77.5, 347.0], [77.6, 347.0], [77.7, 348.0], [77.8, 348.0], [77.9, 349.0], [78.0, 349.0], [78.1, 349.0], [78.2, 349.0], [78.3, 351.0], [78.4, 351.0], [78.5, 352.0], [78.6, 352.0], [78.7, 353.0], [78.8, 353.0], [78.9, 354.0], [79.0, 354.0], [79.1, 354.0], [79.2, 354.0], [79.3, 355.0], [79.4, 355.0], [79.5, 355.0], [79.6, 355.0], [79.7, 356.0], [79.8, 356.0], [79.9, 356.0], [80.0, 356.0], [80.1, 356.0], [80.2, 356.0], [80.3, 356.0], [80.4, 356.0], [80.5, 356.0], [80.6, 356.0], [80.7, 360.0], [80.8, 360.0], [80.9, 361.0], [81.0, 361.0], [81.1, 362.0], [81.2, 362.0], [81.3, 363.0], [81.4, 363.0], [81.5, 363.0], [81.6, 363.0], [81.7, 363.0], [81.8, 363.0], [81.9, 368.0], [82.0, 368.0], [82.1, 368.0], [82.2, 368.0], [82.3, 373.0], [82.4, 373.0], [82.5, 374.0], [82.6, 374.0], [82.7, 374.0], [82.8, 374.0], [82.9, 375.0], [83.0, 375.0], [83.1, 375.0], [83.2, 375.0], [83.3, 376.0], [83.4, 376.0], [83.5, 380.0], [83.6, 380.0], [83.7, 380.0], [83.8, 380.0], [83.9, 380.0], [84.0, 380.0], [84.1, 382.0], [84.2, 382.0], [84.3, 383.0], [84.4, 383.0], [84.5, 383.0], [84.6, 383.0], [84.7, 384.0], [84.8, 384.0], [84.9, 388.0], [85.0, 388.0], [85.1, 390.0], [85.2, 390.0], [85.3, 397.0], [85.4, 397.0], [85.5, 398.0], [85.6, 398.0], [85.7, 400.0], [85.8, 400.0], [85.9, 408.0], [86.0, 408.0], [86.1, 411.0], [86.2, 411.0], [86.3, 411.0], [86.4, 411.0], [86.5, 411.0], [86.6, 411.0], [86.7, 415.0], [86.8, 415.0], [86.9, 418.0], [87.0, 418.0], [87.1, 420.0], [87.2, 420.0], [87.3, 422.0], [87.4, 422.0], [87.5, 423.0], [87.6, 423.0], [87.7, 424.0], [87.8, 424.0], [87.9, 436.0], [88.0, 436.0], [88.1, 439.0], [88.2, 439.0], [88.3, 441.0], [88.4, 441.0], [88.5, 446.0], [88.6, 446.0], [88.7, 449.0], [88.8, 449.0], [88.9, 457.0], [89.0, 457.0], [89.1, 458.0], [89.2, 458.0], [89.3, 460.0], [89.4, 460.0], [89.5, 465.0], [89.6, 465.0], [89.7, 471.0], [89.8, 471.0], [89.9, 473.0], [90.0, 473.0], [90.1, 473.0], [90.2, 473.0], [90.3, 474.0], [90.4, 474.0], [90.5, 475.0], [90.6, 475.0], [90.7, 477.0], [90.8, 477.0], [90.9, 479.0], [91.0, 479.0], [91.1, 480.0], [91.2, 480.0], [91.3, 485.0], [91.4, 485.0], [91.5, 540.0], [91.6, 540.0], [91.7, 600.0], [91.8, 600.0], [91.9, 601.0], [92.0, 601.0], [92.1, 630.0], [92.2, 630.0], [92.3, 635.0], [92.4, 635.0], [92.5, 657.0], [92.6, 657.0], [92.7, 674.0], [92.8, 674.0], [92.9, 695.0], [93.0, 695.0], [93.1, 702.0], [93.2, 702.0], [93.3, 710.0], [93.4, 710.0], [93.5, 715.0], [93.6, 715.0], [93.7, 716.0], [93.8, 716.0], [93.9, 716.0], [94.0, 716.0], [94.1, 718.0], [94.2, 718.0], [94.3, 733.0], [94.4, 733.0], [94.5, 744.0], [94.6, 744.0], [94.7, 803.0], [94.8, 803.0], [94.9, 853.0], [95.0, 853.0], [95.1, 856.0], [95.2, 856.0], [95.3, 857.0], [95.4, 857.0], [95.5, 863.0], [95.6, 863.0], [95.7, 871.0], [95.8, 871.0], [95.9, 873.0], [96.0, 873.0], [96.1, 878.0], [96.2, 878.0], [96.3, 878.0], [96.4, 878.0], [96.5, 908.0], [96.6, 908.0], [96.7, 982.0], [96.8, 982.0], [96.9, 983.0], [97.0, 983.0], [97.1, 1002.0], [97.2, 1002.0], [97.3, 1011.0], [97.4, 1011.0], [97.5, 1011.0], [97.6, 1011.0], [97.7, 1074.0], [97.8, 1074.0], [97.9, 1616.0], [98.0, 1616.0], [98.1, 1839.0], [98.2, 1839.0], [98.3, 1901.0], [98.4, 1901.0], [98.5, 2370.0], [98.6, 2370.0], [98.7, 2454.0], [98.8, 2454.0], [98.9, 2482.0], [99.0, 2482.0], [99.1, 2605.0], [99.2, 2605.0], [99.3, 2778.0], [99.4, 2778.0], [99.5, 5656.0], [99.6, 5656.0], [99.7, 5684.0], [99.8, 5684.0], [99.9, 10901.0], [100.0, 10901.0]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[0.0, 202.0], [0.1, 202.0], [0.2, 205.0], [0.3, 205.0], [0.4, 208.0], [0.5, 208.0], [0.6, 208.0], [0.7, 211.0], [0.8, 212.0], [0.9, 212.0], [1.0, 216.0], [1.1, 216.0], [1.2, 217.0], [1.3, 217.0], [1.4, 217.0], [1.5, 217.0], [1.6, 217.0], [1.7, 217.0], [1.8, 218.0], [1.9, 218.0], [2.0, 220.0], [2.1, 220.0], [2.2, 220.0], [2.3, 220.0], [2.4, 220.0], [2.5, 220.0], [2.6, 220.0], [2.7, 220.0], [2.8, 221.0], [2.9, 221.0], [3.0, 222.0], [3.1, 222.0], [3.2, 223.0], [3.3, 223.0], [3.4, 223.0], [3.5, 223.0], [3.6, 223.0], [3.7, 223.0], [3.8, 223.0], [3.9, 223.0], [4.0, 224.0], [4.1, 224.0], [4.2, 224.0], [4.3, 224.0], [4.4, 225.0], [4.5, 225.0], [4.6, 225.0], [4.7, 225.0], [4.8, 225.0], [4.9, 225.0], [5.0, 225.0], [5.1, 225.0], [5.2, 225.0], [5.3, 225.0], [5.4, 226.0], [5.5, 226.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 227.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 227.0], [6.5, 227.0], [6.6, 227.0], [6.7, 228.0], [6.8, 228.0], [6.9, 228.0], [7.0, 228.0], [7.1, 228.0], [7.2, 228.0], [7.3, 228.0], [7.4, 228.0], [7.5, 228.0], [7.6, 228.0], [7.7, 229.0], [7.8, 229.0], [7.9, 230.0], [8.0, 230.0], [8.1, 230.0], [8.2, 230.0], [8.3, 230.0], [8.4, 230.0], [8.5, 230.0], [8.6, 230.0], [8.7, 230.0], [8.8, 231.0], [8.9, 231.0], [9.0, 231.0], [9.1, 231.0], [9.2, 231.0], [9.3, 231.0], [9.4, 231.0], [9.5, 231.0], [9.6, 231.0], [9.7, 231.0], [9.8, 231.0], [9.9, 231.0], [10.0, 232.0], [10.1, 232.0], [10.2, 232.0], [10.3, 232.0], [10.4, 232.0], [10.5, 232.0], [10.6, 232.0], [10.7, 232.0], [10.8, 232.0], [10.9, 232.0], [11.0, 232.0], [11.1, 232.0], [11.2, 232.0], [11.3, 232.0], [11.4, 233.0], [11.5, 233.0], [11.6, 233.0], [11.7, 233.0], [11.8, 233.0], [11.9, 233.0], [12.0, 233.0], [12.1, 233.0], [12.2, 233.0], [12.3, 233.0], [12.4, 233.0], [12.5, 233.0], [12.6, 234.0], [12.7, 234.0], [12.8, 234.0], [12.9, 234.0], [13.0, 234.0], [13.1, 234.0], [13.2, 234.0], [13.3, 234.0], [13.4, 234.0], [13.5, 234.0], [13.6, 234.0], [13.7, 234.0], [13.8, 234.0], [13.9, 234.0], [14.0, 235.0], [14.1, 235.0], [14.2, 235.0], [14.3, 235.0], [14.4, 235.0], [14.5, 235.0], [14.6, 235.0], [14.7, 235.0], [14.8, 235.0], [14.9, 235.0], [15.0, 236.0], [15.1, 236.0], [15.2, 236.0], [15.3, 236.0], [15.4, 236.0], [15.5, 236.0], [15.6, 236.0], [15.7, 236.0], [15.8, 237.0], [15.9, 237.0], [16.0, 237.0], [16.1, 237.0], [16.2, 237.0], [16.3, 237.0], [16.4, 237.0], [16.5, 237.0], [16.6, 238.0], [16.7, 238.0], [16.8, 238.0], [16.9, 238.0], [17.0, 238.0], [17.1, 238.0], [17.2, 238.0], [17.3, 238.0], [17.4, 238.0], [17.5, 238.0], [17.6, 238.0], [17.7, 238.0], [17.8, 239.0], [17.9, 239.0], [18.0, 239.0], [18.1, 239.0], [18.2, 239.0], [18.3, 239.0], [18.4, 239.0], [18.5, 239.0], [18.6, 239.0], [18.7, 239.0], [18.8, 240.0], [18.9, 240.0], [19.0, 240.0], [19.1, 240.0], [19.2, 240.0], [19.3, 240.0], [19.4, 240.0], [19.5, 240.0], [19.6, 240.0], [19.7, 240.0], [19.8, 240.0], [19.9, 240.0], [20.0, 240.0], [20.1, 240.0], [20.2, 240.0], [20.3, 240.0], [20.4, 240.0], [20.5, 241.0], [20.6, 241.0], [20.7, 241.0], [20.8, 241.0], [20.9, 241.0], [21.0, 241.0], [21.1, 241.0], [21.2, 241.0], [21.3, 241.0], [21.4, 241.0], [21.5, 241.0], [21.6, 241.0], [21.7, 241.0], [21.8, 242.0], [21.9, 242.0], [22.0, 242.0], [22.1, 242.0], [22.2, 242.0], [22.3, 242.0], [22.4, 242.0], [22.5, 242.0], [22.6, 242.0], [22.7, 242.0], [22.8, 242.0], [22.9, 242.0], [23.0, 242.0], [23.1, 242.0], [23.2, 243.0], [23.3, 243.0], [23.4, 243.0], [23.5, 243.0], [23.6, 243.0], [23.7, 243.0], [23.8, 243.0], [23.9, 243.0], [24.0, 244.0], [24.1, 244.0], [24.2, 244.0], [24.3, 244.0], [24.4, 244.0], [24.5, 244.0], [24.6, 244.0], [24.7, 244.0], [24.8, 244.0], [24.9, 244.0], [25.0, 245.0], [25.1, 245.0], [25.2, 245.0], [25.3, 245.0], [25.4, 245.0], [25.5, 245.0], [25.6, 245.0], [25.7, 245.0], [25.8, 245.0], [25.9, 245.0], [26.0, 245.0], [26.1, 245.0], [26.2, 245.0], [26.3, 245.0], [26.4, 246.0], [26.5, 246.0], [26.6, 246.0], [26.7, 246.0], [26.8, 246.0], [26.9, 246.0], [27.0, 246.0], [27.1, 246.0], [27.2, 247.0], [27.3, 247.0], [27.4, 247.0], [27.5, 247.0], [27.6, 247.0], [27.7, 247.0], [27.8, 248.0], [27.9, 248.0], [28.0, 248.0], [28.1, 248.0], [28.2, 248.0], [28.3, 248.0], [28.4, 248.0], [28.5, 248.0], [28.6, 248.0], [28.7, 248.0], [28.8, 249.0], [28.9, 249.0], [29.0, 249.0], [29.1, 249.0], [29.2, 249.0], [29.3, 249.0], [29.4, 249.0], [29.5, 250.0], [29.6, 250.0], [29.7, 250.0], [29.8, 250.0], [29.9, 250.0], [30.0, 250.0], [30.1, 250.0], [30.2, 250.0], [30.3, 250.0], [30.4, 250.0], [30.5, 251.0], [30.6, 251.0], [30.7, 251.0], [30.8, 251.0], [30.9, 251.0], [31.0, 251.0], [31.1, 251.0], [31.2, 251.0], [31.3, 252.0], [31.4, 252.0], [31.5, 252.0], [31.6, 252.0], [31.7, 252.0], [31.8, 252.0], [31.9, 252.0], [32.0, 253.0], [32.1, 253.0], [32.2, 253.0], [32.3, 253.0], [32.4, 253.0], [32.5, 253.0], [32.6, 253.0], [32.7, 253.0], [32.8, 253.0], [32.9, 253.0], [33.0, 253.0], [33.1, 253.0], [33.2, 254.0], [33.3, 254.0], [33.4, 254.0], [33.5, 254.0], [33.6, 254.0], [33.7, 254.0], [33.8, 254.0], [33.9, 254.0], [34.0, 254.0], [34.1, 254.0], [34.2, 254.0], [34.3, 254.0], [34.4, 254.0], [34.5, 254.0], [34.6, 255.0], [34.7, 255.0], [34.8, 255.0], [34.9, 255.0], [35.0, 255.0], [35.1, 255.0], [35.2, 255.0], [35.3, 255.0], [35.4, 256.0], [35.5, 256.0], [35.6, 256.0], [35.7, 256.0], [35.8, 256.0], [35.9, 256.0], [36.0, 256.0], [36.1, 256.0], [36.2, 256.0], [36.3, 256.0], [36.4, 257.0], [36.5, 257.0], [36.6, 257.0], [36.7, 257.0], [36.8, 258.0], [36.9, 258.0], [37.0, 258.0], [37.1, 258.0], [37.2, 258.0], [37.3, 258.0], [37.4, 259.0], [37.5, 259.0], [37.6, 259.0], [37.7, 259.0], [37.8, 259.0], [37.9, 259.0], [38.0, 259.0], [38.1, 259.0], [38.2, 259.0], [38.3, 259.0], [38.4, 259.0], [38.5, 259.0], [38.6, 260.0], [38.7, 260.0], [38.8, 260.0], [38.9, 260.0], [39.0, 260.0], [39.1, 260.0], [39.2, 260.0], [39.3, 260.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 262.0], [40.1, 262.0], [40.2, 262.0], [40.3, 262.0], [40.4, 262.0], [40.5, 262.0], [40.6, 262.0], [40.7, 262.0], [40.8, 262.0], [40.9, 262.0], [41.0, 263.0], [41.1, 263.0], [41.2, 263.0], [41.3, 263.0], [41.4, 263.0], [41.5, 263.0], [41.6, 264.0], [41.7, 264.0], [41.8, 264.0], [41.9, 264.0], [42.0, 264.0], [42.1, 264.0], [42.2, 265.0], [42.3, 265.0], [42.4, 265.0], [42.5, 265.0], [42.6, 265.0], [42.7, 265.0], [42.8, 265.0], [42.9, 266.0], [43.0, 266.0], [43.1, 266.0], [43.2, 267.0], [43.3, 267.0], [43.4, 267.0], [43.5, 267.0], [43.6, 267.0], [43.7, 267.0], [43.8, 267.0], [43.9, 267.0], [44.0, 268.0], [44.1, 268.0], [44.2, 268.0], [44.3, 268.0], [44.4, 268.0], [44.5, 268.0], [44.6, 268.0], [44.7, 268.0], [44.8, 268.0], [44.9, 268.0], [45.0, 268.0], [45.1, 268.0], [45.2, 268.0], [45.3, 268.0], [45.4, 269.0], [45.5, 269.0], [45.6, 269.0], [45.7, 269.0], [45.8, 270.0], [45.9, 270.0], [46.0, 270.0], [46.1, 270.0], [46.2, 270.0], [46.3, 270.0], [46.4, 271.0], [46.5, 271.0], [46.6, 271.0], [46.7, 271.0], [46.8, 272.0], [46.9, 272.0], [47.0, 272.0], [47.1, 272.0], [47.2, 273.0], [47.3, 273.0], [47.4, 273.0], [47.5, 273.0], [47.6, 274.0], [47.7, 274.0], [47.8, 274.0], [47.9, 274.0], [48.0, 274.0], [48.1, 274.0], [48.2, 274.0], [48.3, 274.0], [48.4, 274.0], [48.5, 274.0], [48.6, 275.0], [48.7, 275.0], [48.8, 275.0], [48.9, 275.0], [49.0, 275.0], [49.1, 275.0], [49.2, 275.0], [49.3, 275.0], [49.4, 276.0], [49.5, 276.0], [49.6, 276.0], [49.7, 276.0], [49.8, 276.0], [49.9, 276.0], [50.0, 277.0], [50.1, 277.0], [50.2, 277.0], [50.3, 277.0], [50.4, 278.0], [50.5, 278.0], [50.6, 280.0], [50.7, 280.0], [50.8, 281.0], [50.9, 281.0], [51.0, 281.0], [51.1, 281.0], [51.2, 281.0], [51.3, 281.0], [51.4, 283.0], [51.5, 283.0], [51.6, 283.0], [51.7, 283.0], [51.8, 283.0], [51.9, 283.0], [52.0, 283.0], [52.1, 283.0], [52.2, 284.0], [52.3, 284.0], [52.4, 284.0], [52.5, 284.0], [52.6, 285.0], [52.7, 285.0], [52.8, 285.0], [52.9, 285.0], [53.0, 285.0], [53.1, 285.0], [53.2, 286.0], [53.3, 286.0], [53.4, 288.0], [53.5, 288.0], [53.6, 289.0], [53.7, 289.0], [53.8, 289.0], [53.9, 289.0], [54.0, 290.0], [54.1, 290.0], [54.2, 291.0], [54.3, 291.0], [54.4, 291.0], [54.5, 291.0], [54.6, 291.0], [54.7, 291.0], [54.8, 291.0], [54.9, 292.0], [55.0, 292.0], [55.1, 292.0], [55.2, 292.0], [55.3, 292.0], [55.4, 292.0], [55.5, 292.0], [55.6, 292.0], [55.7, 292.0], [55.8, 292.0], [55.9, 293.0], [56.0, 293.0], [56.1, 293.0], [56.2, 293.0], [56.3, 293.0], [56.4, 293.0], [56.5, 294.0], [56.6, 294.0], [56.7, 294.0], [56.8, 294.0], [56.9, 295.0], [57.0, 295.0], [57.1, 295.0], [57.2, 295.0], [57.3, 295.0], [57.4, 295.0], [57.5, 295.0], [57.6, 295.0], [57.7, 295.0], [57.8, 295.0], [57.9, 295.0], [58.0, 295.0], [58.1, 296.0], [58.2, 296.0], [58.3, 296.0], [58.4, 296.0], [58.5, 297.0], [58.6, 297.0], [58.7, 297.0], [58.8, 297.0], [58.9, 297.0], [59.0, 297.0], [59.1, 297.0], [59.2, 298.0], [59.3, 298.0], [59.4, 298.0], [59.5, 298.0], [59.6, 298.0], [59.7, 298.0], [59.8, 298.0], [59.9, 299.0], [60.0, 299.0], [60.1, 299.0], [60.2, 299.0], [60.3, 299.0], [60.4, 299.0], [60.5, 300.0], [60.6, 300.0], [60.7, 300.0], [60.8, 300.0], [60.9, 300.0], [61.0, 300.0], [61.1, 300.0], [61.2, 301.0], [61.3, 301.0], [61.4, 301.0], [61.5, 301.0], [61.6, 301.0], [61.7, 301.0], [61.8, 301.0], [61.9, 301.0], [62.0, 301.0], [62.1, 301.0], [62.2, 302.0], [62.3, 302.0], [62.4, 302.0], [62.5, 302.0], [62.6, 302.0], [62.7, 302.0], [62.8, 302.0], [62.9, 303.0], [63.0, 303.0], [63.1, 303.0], [63.2, 303.0], [63.3, 303.0], [63.4, 303.0], [63.5, 303.0], [63.6, 303.0], [63.7, 303.0], [63.8, 303.0], [63.9, 303.0], [64.0, 304.0], [64.1, 304.0], [64.2, 304.0], [64.3, 304.0], [64.4, 304.0], [64.5, 304.0], [64.6, 305.0], [64.7, 305.0], [64.8, 305.0], [64.9, 305.0], [65.0, 305.0], [65.1, 305.0], [65.2, 306.0], [65.3, 306.0], [65.4, 307.0], [65.5, 307.0], [65.6, 307.0], [65.7, 307.0], [65.8, 307.0], [65.9, 307.0], [66.0, 307.0], [66.1, 307.0], [66.2, 307.0], [66.3, 307.0], [66.4, 308.0], [66.5, 308.0], [66.6, 308.0], [66.7, 308.0], [66.8, 309.0], [66.9, 309.0], [67.0, 309.0], [67.1, 309.0], [67.2, 311.0], [67.3, 311.0], [67.4, 311.0], [67.5, 311.0], [67.6, 311.0], [67.7, 311.0], [67.8, 312.0], [67.9, 312.0], [68.0, 312.0], [68.1, 312.0], [68.2, 312.0], [68.3, 312.0], [68.4, 313.0], [68.5, 313.0], [68.6, 313.0], [68.7, 313.0], [68.8, 314.0], [68.9, 314.0], [69.0, 316.0], [69.1, 316.0], [69.2, 318.0], [69.3, 318.0], [69.4, 319.0], [69.5, 319.0], [69.6, 319.0], [69.7, 319.0], [69.8, 319.0], [69.9, 322.0], [70.0, 322.0], [70.1, 322.0], [70.2, 322.0], [70.3, 323.0], [70.4, 323.0], [70.5, 323.0], [70.6, 323.0], [70.7, 323.0], [70.8, 323.0], [70.9, 323.0], [71.0, 323.0], [71.1, 324.0], [71.2, 324.0], [71.3, 324.0], [71.4, 324.0], [71.5, 324.0], [71.6, 324.0], [71.7, 324.0], [71.8, 324.0], [71.9, 325.0], [72.0, 325.0], [72.1, 327.0], [72.2, 327.0], [72.3, 327.0], [72.4, 327.0], [72.5, 328.0], [72.6, 328.0], [72.7, 331.0], [72.8, 331.0], [72.9, 331.0], [73.0, 331.0], [73.1, 331.0], [73.2, 331.0], [73.3, 332.0], [73.4, 332.0], [73.5, 334.0], [73.6, 334.0], [73.7, 334.0], [73.8, 334.0], [73.9, 335.0], [74.0, 335.0], [74.1, 335.0], [74.2, 335.0], [74.3, 335.0], [74.4, 335.0], [74.5, 336.0], [74.6, 336.0], [74.7, 337.0], [74.8, 337.0], [74.9, 337.0], [75.0, 337.0], [75.1, 338.0], [75.2, 338.0], [75.3, 338.0], [75.4, 338.0], [75.5, 338.0], [75.6, 338.0], [75.7, 338.0], [75.8, 338.0], [75.9, 341.0], [76.0, 341.0], [76.1, 342.0], [76.2, 342.0], [76.3, 347.0], [76.4, 347.0], [76.5, 351.0], [76.6, 351.0], [76.7, 351.0], [76.8, 351.0], [76.9, 352.0], [77.0, 352.0], [77.1, 352.0], [77.2, 352.0], [77.3, 353.0], [77.4, 353.0], [77.5, 353.0], [77.6, 353.0], [77.7, 355.0], [77.8, 355.0], [77.9, 355.0], [78.0, 355.0], [78.1, 355.0], [78.2, 355.0], [78.3, 355.0], [78.4, 355.0], [78.5, 357.0], [78.6, 357.0], [78.7, 357.0], [78.8, 357.0], [78.9, 357.0], [79.0, 357.0], [79.1, 358.0], [79.2, 358.0], [79.3, 358.0], [79.4, 358.0], [79.5, 361.0], [79.6, 361.0], [79.7, 369.0], [79.8, 369.0], [79.9, 370.0], [80.0, 370.0], [80.1, 371.0], [80.2, 371.0], [80.3, 374.0], [80.4, 374.0], [80.5, 374.0], [80.6, 374.0], [80.7, 375.0], [80.8, 375.0], [80.9, 377.0], [81.0, 377.0], [81.1, 378.0], [81.2, 378.0], [81.3, 378.0], [81.4, 378.0], [81.5, 379.0], [81.6, 379.0], [81.7, 379.0], [81.8, 379.0], [81.9, 381.0], [82.0, 381.0], [82.1, 381.0], [82.2, 381.0], [82.3, 382.0], [82.4, 382.0], [82.5, 384.0], [82.6, 384.0], [82.7, 385.0], [82.8, 385.0], [82.9, 386.0], [83.0, 386.0], [83.1, 391.0], [83.2, 391.0], [83.3, 391.0], [83.4, 391.0], [83.5, 391.0], [83.6, 391.0], [83.7, 392.0], [83.8, 392.0], [83.9, 393.0], [84.0, 393.0], [84.1, 400.0], [84.2, 400.0], [84.3, 401.0], [84.4, 401.0], [84.5, 402.0], [84.6, 402.0], [84.7, 412.0], [84.8, 412.0], [84.9, 413.0], [85.0, 413.0], [85.1, 414.0], [85.2, 414.0], [85.3, 416.0], [85.4, 416.0], [85.5, 420.0], [85.6, 420.0], [85.7, 422.0], [85.8, 422.0], [85.9, 422.0], [86.0, 422.0], [86.1, 423.0], [86.2, 423.0], [86.3, 424.0], [86.4, 424.0], [86.5, 425.0], [86.6, 425.0], [86.7, 429.0], [86.8, 429.0], [86.9, 434.0], [87.0, 434.0], [87.1, 437.0], [87.2, 437.0], [87.3, 438.0], [87.4, 438.0], [87.5, 439.0], [87.6, 439.0], [87.7, 439.0], [87.8, 439.0], [87.9, 441.0], [88.0, 441.0], [88.1, 460.0], [88.2, 460.0], [88.3, 473.0], [88.4, 473.0], [88.5, 480.0], [88.6, 480.0], [88.7, 489.0], [88.8, 489.0], [88.9, 490.0], [89.0, 490.0], [89.1, 492.0], [89.2, 492.0], [89.3, 509.0], [89.4, 509.0], [89.5, 515.0], [89.6, 515.0], [89.7, 528.0], [89.8, 528.0], [89.9, 536.0], [90.0, 536.0], [90.1, 549.0], [90.2, 549.0], [90.3, 605.0], [90.4, 605.0], [90.5, 631.0], [90.6, 631.0], [90.7, 633.0], [90.8, 633.0], [90.9, 639.0], [91.0, 639.0], [91.1, 663.0], [91.2, 663.0], [91.3, 682.0], [91.4, 682.0], [91.5, 702.0], [91.6, 702.0], [91.7, 712.0], [91.8, 712.0], [91.9, 715.0], [92.0, 715.0], [92.1, 716.0], [92.2, 716.0], [92.3, 730.0], [92.4, 730.0], [92.5, 731.0], [92.6, 731.0], [92.7, 738.0], [92.8, 738.0], [92.9, 742.0], [93.0, 742.0], [93.1, 754.0], [93.2, 754.0], [93.3, 757.0], [93.4, 757.0], [93.5, 821.0], [93.6, 821.0], [93.7, 827.0], [93.8, 827.0], [93.9, 829.0], [94.0, 829.0], [94.1, 836.0], [94.2, 836.0], [94.3, 842.0], [94.4, 842.0], [94.5, 857.0], [94.6, 857.0], [94.7, 874.0], [94.8, 874.0], [94.9, 879.0], [95.0, 879.0], [95.1, 883.0], [95.2, 883.0], [95.3, 925.0], [95.4, 925.0], [95.5, 980.0], [95.6, 980.0], [95.7, 984.0], [95.8, 984.0], [95.9, 1002.0], [96.0, 1002.0], [96.1, 1016.0], [96.2, 1016.0], [96.3, 1019.0], [96.4, 1019.0], [96.5, 1022.0], [96.6, 1022.0], [96.7, 1035.0], [96.8, 1035.0], [96.9, 1045.0], [97.0, 1045.0], [97.1, 1082.0], [97.2, 1082.0], [97.3, 1100.0], [97.4, 1100.0], [97.5, 1100.0], [97.6, 1100.0], [97.7, 1117.0], [97.8, 1117.0], [97.9, 1244.0], [98.0, 1244.0], [98.1, 1759.0], [98.2, 1759.0], [98.3, 1879.0], [98.4, 1879.0], [98.5, 2599.0], [98.6, 2599.0], [98.7, 2954.0], [98.8, 2954.0], [98.9, 3193.0], [99.0, 3193.0], [99.1, 4202.0], [99.2, 4202.0], [99.3, 5628.0], [99.4, 5628.0], [99.5, 6468.0], [99.6, 6468.0], [99.7, 8542.0], [99.8, 8542.0], [99.9, 9007.0], [100.0, 9007.0]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[0.0, 216.0], [0.1, 216.0], [0.2, 217.0], [0.3, 217.0], [0.4, 218.0], [0.5, 218.0], [0.6, 218.0], [0.7, 219.0], [0.8, 219.0], [0.9, 219.0], [1.0, 219.0], [1.1, 219.0], [1.2, 219.0], [1.3, 220.0], [1.4, 220.0], [1.5, 220.0], [1.6, 221.0], [1.7, 221.0], [1.8, 223.0], [1.9, 223.0], [2.0, 223.0], [2.1, 223.0], [2.2, 225.0], [2.3, 225.0], [2.4, 225.0], [2.5, 225.0], [2.6, 226.0], [2.7, 226.0], [2.8, 226.0], [2.9, 226.0], [3.0, 227.0], [3.1, 227.0], [3.2, 227.0], [3.3, 227.0], [3.4, 227.0], [3.5, 227.0], [3.6, 228.0], [3.7, 228.0], [3.8, 228.0], [3.9, 228.0], [4.0, 228.0], [4.1, 228.0], [4.2, 228.0], [4.3, 228.0], [4.4, 228.0], [4.5, 228.0], [4.6, 228.0], [4.7, 228.0], [4.8, 228.0], [4.9, 228.0], [5.0, 229.0], [5.1, 229.0], [5.2, 229.0], [5.3, 229.0], [5.4, 229.0], [5.5, 229.0], [5.6, 229.0], [5.7, 229.0], [5.8, 229.0], [5.9, 229.0], [6.0, 231.0], [6.1, 231.0], [6.2, 231.0], [6.3, 231.0], [6.4, 231.0], [6.5, 231.0], [6.6, 232.0], [6.7, 232.0], [6.8, 232.0], [6.9, 232.0], [7.0, 232.0], [7.1, 232.0], [7.2, 233.0], [7.3, 233.0], [7.4, 233.0], [7.5, 233.0], [7.6, 233.0], [7.7, 233.0], [7.8, 233.0], [7.9, 233.0], [8.0, 235.0], [8.1, 235.0], [8.2, 235.0], [8.3, 235.0], [8.4, 236.0], [8.5, 236.0], [8.6, 236.0], [8.7, 236.0], [8.8, 236.0], [8.9, 236.0], [9.0, 237.0], [9.1, 237.0], [9.2, 237.0], [9.3, 237.0], [9.4, 237.0], [9.5, 237.0], [9.6, 238.0], [9.7, 238.0], [9.8, 238.0], [9.9, 238.0], [10.0, 238.0], [10.1, 238.0], [10.2, 238.0], [10.3, 238.0], [10.4, 239.0], [10.5, 239.0], [10.6, 239.0], [10.7, 239.0], [10.8, 239.0], [10.9, 239.0], [11.0, 239.0], [11.1, 239.0], [11.2, 240.0], [11.3, 240.0], [11.4, 240.0], [11.5, 240.0], [11.6, 240.0], [11.7, 240.0], [11.8, 240.0], [11.9, 240.0], [12.0, 240.0], [12.1, 240.0], [12.2, 241.0], [12.3, 241.0], [12.4, 241.0], [12.5, 241.0], [12.6, 241.0], [12.7, 241.0], [12.8, 242.0], [12.9, 242.0], [13.0, 243.0], [13.1, 243.0], [13.2, 243.0], [13.3, 243.0], [13.4, 244.0], [13.5, 244.0], [13.6, 244.0], [13.7, 244.0], [13.8, 244.0], [13.9, 244.0], [14.0, 244.0], [14.1, 244.0], [14.2, 244.0], [14.3, 244.0], [14.4, 245.0], [14.5, 245.0], [14.6, 245.0], [14.7, 245.0], [14.8, 246.0], [14.9, 246.0], [15.0, 246.0], [15.1, 246.0], [15.2, 246.0], [15.3, 246.0], [15.4, 246.0], [15.5, 246.0], [15.6, 247.0], [15.7, 247.0], [15.8, 247.0], [15.9, 247.0], [16.0, 248.0], [16.1, 248.0], [16.2, 248.0], [16.3, 248.0], [16.4, 248.0], [16.5, 248.0], [16.6, 249.0], [16.7, 249.0], [16.8, 249.0], [16.9, 249.0], [17.0, 249.0], [17.1, 249.0], [17.2, 249.0], [17.3, 250.0], [17.4, 250.0], [17.5, 250.0], [17.6, 250.0], [17.7, 250.0], [17.8, 250.0], [17.9, 250.0], [18.0, 250.0], [18.1, 250.0], [18.2, 250.0], [18.3, 250.0], [18.4, 250.0], [18.5, 250.0], [18.6, 251.0], [18.7, 251.0], [18.8, 251.0], [18.9, 251.0], [19.0, 251.0], [19.1, 251.0], [19.2, 251.0], [19.3, 251.0], [19.4, 251.0], [19.5, 251.0], [19.6, 251.0], [19.7, 251.0], [19.8, 251.0], [19.9, 251.0], [20.0, 251.0], [20.1, 251.0], [20.2, 251.0], [20.3, 252.0], [20.4, 252.0], [20.5, 252.0], [20.6, 252.0], [20.7, 252.0], [20.8, 252.0], [20.9, 252.0], [21.0, 252.0], [21.1, 252.0], [21.2, 252.0], [21.3, 253.0], [21.4, 253.0], [21.5, 253.0], [21.6, 253.0], [21.7, 253.0], [21.8, 253.0], [21.9, 254.0], [22.0, 254.0], [22.1, 254.0], [22.2, 254.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 255.0], [22.7, 255.0], [22.8, 255.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 257.0], [24.9, 257.0], [25.0, 257.0], [25.1, 258.0], [25.2, 258.0], [25.3, 258.0], [25.4, 258.0], [25.5, 258.0], [25.6, 258.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 259.0], [26.2, 259.0], [26.3, 259.0], [26.4, 259.0], [26.5, 259.0], [26.6, 259.0], [26.7, 259.0], [26.8, 259.0], [26.9, 259.0], [27.0, 259.0], [27.1, 259.0], [27.2, 259.0], [27.3, 260.0], [27.4, 260.0], [27.5, 260.0], [27.6, 260.0], [27.7, 260.0], [27.8, 260.0], [27.9, 260.0], [28.0, 260.0], [28.1, 260.0], [28.2, 260.0], [28.3, 260.0], [28.4, 260.0], [28.5, 261.0], [28.6, 261.0], [28.7, 261.0], [28.8, 262.0], [28.9, 262.0], [29.0, 262.0], [29.1, 262.0], [29.2, 262.0], [29.3, 262.0], [29.4, 262.0], [29.5, 262.0], [29.6, 262.0], [29.7, 262.0], [29.8, 263.0], [29.9, 263.0], [30.0, 263.0], [30.1, 263.0], [30.2, 263.0], [30.3, 263.0], [30.4, 263.0], [30.5, 263.0], [30.6, 263.0], [30.7, 263.0], [30.8, 263.0], [30.9, 263.0], [31.0, 264.0], [31.1, 264.0], [31.2, 264.0], [31.3, 264.0], [31.4, 264.0], [31.5, 264.0], [31.6, 264.0], [31.7, 264.0], [31.8, 265.0], [31.9, 265.0], [32.0, 265.0], [32.1, 265.0], [32.2, 265.0], [32.3, 265.0], [32.4, 265.0], [32.5, 265.0], [32.6, 265.0], [32.7, 265.0], [32.8, 266.0], [32.9, 266.0], [33.0, 266.0], [33.1, 266.0], [33.2, 266.0], [33.3, 266.0], [33.4, 266.0], [33.5, 266.0], [33.6, 266.0], [33.7, 266.0], [33.8, 266.0], [33.9, 266.0], [34.0, 267.0], [34.1, 267.0], [34.2, 267.0], [34.3, 267.0], [34.4, 267.0], [34.5, 267.0], [34.6, 267.0], [34.7, 267.0], [34.8, 268.0], [34.9, 268.0], [35.0, 268.0], [35.1, 268.0], [35.2, 268.0], [35.3, 268.0], [35.4, 268.0], [35.5, 268.0], [35.6, 268.0], [35.7, 268.0], [35.8, 268.0], [35.9, 268.0], [36.0, 269.0], [36.1, 269.0], [36.2, 269.0], [36.3, 269.0], [36.4, 270.0], [36.5, 270.0], [36.6, 270.0], [36.7, 270.0], [36.8, 271.0], [36.9, 271.0], [37.0, 271.0], [37.1, 271.0], [37.2, 271.0], [37.3, 271.0], [37.4, 271.0], [37.5, 271.0], [37.6, 271.0], [37.7, 271.0], [37.8, 272.0], [37.9, 272.0], [38.0, 272.0], [38.1, 272.0], [38.2, 272.0], [38.3, 272.0], [38.4, 273.0], [38.5, 273.0], [38.6, 273.0], [38.7, 273.0], [38.8, 273.0], [38.9, 273.0], [39.0, 273.0], [39.1, 273.0], [39.2, 273.0], [39.3, 273.0], [39.4, 273.0], [39.5, 273.0], [39.6, 274.0], [39.7, 274.0], [39.8, 274.0], [39.9, 274.0], [40.0, 274.0], [40.1, 274.0], [40.2, 274.0], [40.3, 274.0], [40.4, 275.0], [40.5, 275.0], [40.6, 275.0], [40.7, 275.0], [40.8, 276.0], [40.9, 276.0], [41.0, 276.0], [41.1, 276.0], [41.2, 276.0], [41.3, 276.0], [41.4, 276.0], [41.5, 276.0], [41.6, 276.0], [41.7, 276.0], [41.8, 276.0], [41.9, 276.0], [42.0, 276.0], [42.1, 276.0], [42.2, 277.0], [42.3, 277.0], [42.4, 277.0], [42.5, 277.0], [42.6, 277.0], [42.7, 277.0], [42.8, 278.0], [42.9, 278.0], [43.0, 278.0], [43.1, 278.0], [43.2, 278.0], [43.3, 278.0], [43.4, 278.0], [43.5, 278.0], [43.6, 278.0], [43.7, 278.0], [43.8, 279.0], [43.9, 279.0], [44.0, 280.0], [44.1, 280.0], [44.2, 280.0], [44.3, 280.0], [44.4, 280.0], [44.5, 280.0], [44.6, 280.0], [44.7, 280.0], [44.8, 280.0], [44.9, 280.0], [45.0, 280.0], [45.1, 280.0], [45.2, 280.0], [45.3, 280.0], [45.4, 281.0], [45.5, 281.0], [45.6, 281.0], [45.7, 281.0], [45.8, 282.0], [45.9, 282.0], [46.0, 282.0], [46.1, 282.0], [46.2, 282.0], [46.3, 282.0], [46.4, 282.0], [46.5, 282.0], [46.6, 282.0], [46.7, 282.0], [46.8, 283.0], [46.9, 283.0], [47.0, 283.0], [47.1, 283.0], [47.2, 283.0], [47.3, 283.0], [47.4, 284.0], [47.5, 284.0], [47.6, 284.0], [47.7, 284.0], [47.8, 284.0], [47.9, 284.0], [48.0, 285.0], [48.1, 285.0], [48.2, 285.0], [48.3, 285.0], [48.4, 285.0], [48.5, 285.0], [48.6, 285.0], [48.7, 285.0], [48.8, 285.0], [48.9, 285.0], [49.0, 285.0], [49.1, 285.0], [49.2, 286.0], [49.3, 286.0], [49.4, 286.0], [49.5, 287.0], [49.6, 287.0], [49.7, 287.0], [49.8, 287.0], [49.9, 287.0], [50.0, 287.0], [50.1, 288.0], [50.2, 288.0], [50.3, 288.0], [50.4, 288.0], [50.5, 289.0], [50.6, 289.0], [50.7, 290.0], [50.8, 290.0], [50.9, 292.0], [51.0, 292.0], [51.1, 292.0], [51.2, 292.0], [51.3, 292.0], [51.4, 292.0], [51.5, 293.0], [51.6, 293.0], [51.7, 293.0], [51.8, 293.0], [51.9, 293.0], [52.0, 293.0], [52.1, 294.0], [52.2, 294.0], [52.3, 294.0], [52.4, 294.0], [52.5, 294.0], [52.6, 294.0], [52.7, 294.0], [52.8, 294.0], [52.9, 294.0], [53.0, 294.0], [53.1, 295.0], [53.2, 295.0], [53.3, 295.0], [53.4, 295.0], [53.5, 296.0], [53.6, 296.0], [53.7, 297.0], [53.8, 297.0], [53.9, 297.0], [54.0, 297.0], [54.1, 297.0], [54.2, 297.0], [54.3, 298.0], [54.4, 298.0], [54.5, 298.0], [54.6, 298.0], [54.7, 299.0], [54.8, 299.0], [54.9, 300.0], [55.0, 300.0], [55.1, 300.0], [55.2, 300.0], [55.3, 301.0], [55.4, 301.0], [55.5, 301.0], [55.6, 301.0], [55.7, 301.0], [55.8, 301.0], [55.9, 301.0], [56.0, 301.0], [56.1, 302.0], [56.2, 302.0], [56.3, 302.0], [56.4, 302.0], [56.5, 302.0], [56.6, 302.0], [56.7, 302.0], [56.8, 302.0], [56.9, 302.0], [57.0, 302.0], [57.1, 303.0], [57.2, 303.0], [57.3, 303.0], [57.4, 303.0], [57.5, 303.0], [57.6, 303.0], [57.7, 304.0], [57.8, 304.0], [57.9, 304.0], [58.0, 304.0], [58.1, 304.0], [58.2, 304.0], [58.3, 304.0], [58.4, 304.0], [58.5, 304.0], [58.6, 304.0], [58.7, 305.0], [58.8, 305.0], [58.9, 306.0], [59.0, 306.0], [59.1, 306.0], [59.2, 306.0], [59.3, 306.0], [59.4, 306.0], [59.5, 306.0], [59.6, 306.0], [59.7, 308.0], [59.8, 308.0], [59.9, 308.0], [60.0, 308.0], [60.1, 309.0], [60.2, 309.0], [60.3, 309.0], [60.4, 309.0], [60.5, 309.0], [60.6, 309.0], [60.7, 309.0], [60.8, 309.0], [60.9, 312.0], [61.0, 312.0], [61.1, 314.0], [61.2, 314.0], [61.3, 314.0], [61.4, 314.0], [61.5, 315.0], [61.6, 315.0], [61.7, 316.0], [61.8, 316.0], [61.9, 317.0], [62.0, 317.0], [62.1, 317.0], [62.2, 317.0], [62.3, 317.0], [62.4, 317.0], [62.5, 317.0], [62.6, 317.0], [62.7, 318.0], [62.8, 318.0], [62.9, 318.0], [63.0, 318.0], [63.1, 319.0], [63.2, 319.0], [63.3, 321.0], [63.4, 321.0], [63.5, 321.0], [63.6, 321.0], [63.7, 322.0], [63.8, 322.0], [63.9, 323.0], [64.0, 323.0], [64.1, 323.0], [64.2, 323.0], [64.3, 324.0], [64.4, 324.0], [64.5, 324.0], [64.6, 324.0], [64.7, 325.0], [64.8, 325.0], [64.9, 326.0], [65.0, 326.0], [65.1, 328.0], [65.2, 328.0], [65.3, 330.0], [65.4, 330.0], [65.5, 331.0], [65.6, 331.0], [65.7, 331.0], [65.8, 331.0], [65.9, 332.0], [66.0, 332.0], [66.1, 332.0], [66.2, 332.0], [66.3, 333.0], [66.4, 333.0], [66.5, 334.0], [66.6, 334.0], [66.7, 334.0], [66.8, 334.0], [66.9, 334.0], [67.0, 334.0], [67.1, 335.0], [67.2, 335.0], [67.3, 336.0], [67.4, 336.0], [67.5, 336.0], [67.6, 336.0], [67.7, 338.0], [67.8, 338.0], [67.9, 338.0], [68.0, 338.0], [68.1, 339.0], [68.2, 339.0], [68.3, 339.0], [68.4, 339.0], [68.5, 340.0], [68.6, 340.0], [68.7, 341.0], [68.8, 341.0], [68.9, 341.0], [69.0, 341.0], [69.1, 342.0], [69.2, 342.0], [69.3, 343.0], [69.4, 343.0], [69.5, 343.0], [69.6, 343.0], [69.7, 343.0], [69.8, 343.0], [69.9, 344.0], [70.0, 344.0], [70.1, 344.0], [70.2, 344.0], [70.3, 344.0], [70.4, 344.0], [70.5, 344.0], [70.6, 344.0], [70.7, 345.0], [70.8, 345.0], [70.9, 345.0], [71.0, 345.0], [71.1, 345.0], [71.2, 345.0], [71.3, 345.0], [71.4, 345.0], [71.5, 346.0], [71.6, 346.0], [71.7, 348.0], [71.8, 348.0], [71.9, 351.0], [72.0, 351.0], [72.1, 352.0], [72.2, 352.0], [72.3, 353.0], [72.4, 353.0], [72.5, 354.0], [72.6, 354.0], [72.7, 355.0], [72.8, 355.0], [72.9, 355.0], [73.0, 355.0], [73.1, 356.0], [73.2, 356.0], [73.3, 357.0], [73.4, 357.0], [73.5, 357.0], [73.6, 357.0], [73.7, 358.0], [73.8, 358.0], [73.9, 359.0], [74.0, 359.0], [74.1, 359.0], [74.2, 359.0], [74.3, 361.0], [74.4, 361.0], [74.5, 362.0], [74.6, 362.0], [74.7, 363.0], [74.8, 363.0], [74.9, 365.0], [75.0, 365.0], [75.1, 366.0], [75.2, 366.0], [75.3, 366.0], [75.4, 366.0], [75.5, 366.0], [75.6, 366.0], [75.7, 367.0], [75.8, 367.0], [75.9, 371.0], [76.0, 371.0], [76.1, 371.0], [76.2, 371.0], [76.3, 373.0], [76.4, 373.0], [76.5, 373.0], [76.6, 373.0], [76.7, 373.0], [76.8, 373.0], [76.9, 375.0], [77.0, 375.0], [77.1, 375.0], [77.2, 375.0], [77.3, 375.0], [77.4, 375.0], [77.5, 375.0], [77.6, 375.0], [77.7, 377.0], [77.8, 377.0], [77.9, 378.0], [78.0, 378.0], [78.1, 381.0], [78.2, 381.0], [78.3, 382.0], [78.4, 382.0], [78.5, 383.0], [78.6, 383.0], [78.7, 383.0], [78.8, 383.0], [78.9, 383.0], [79.0, 383.0], [79.1, 384.0], [79.2, 384.0], [79.3, 384.0], [79.4, 384.0], [79.5, 385.0], [79.6, 385.0], [79.7, 387.0], [79.8, 387.0], [79.9, 387.0], [80.0, 387.0], [80.1, 388.0], [80.2, 388.0], [80.3, 388.0], [80.4, 388.0], [80.5, 389.0], [80.6, 389.0], [80.7, 390.0], [80.8, 390.0], [80.9, 391.0], [81.0, 391.0], [81.1, 394.0], [81.2, 394.0], [81.3, 396.0], [81.4, 396.0], [81.5, 397.0], [81.6, 397.0], [81.7, 398.0], [81.8, 398.0], [81.9, 401.0], [82.0, 401.0], [82.1, 401.0], [82.2, 401.0], [82.3, 402.0], [82.4, 402.0], [82.5, 403.0], [82.6, 403.0], [82.7, 404.0], [82.8, 404.0], [82.9, 404.0], [83.0, 404.0], [83.1, 404.0], [83.2, 404.0], [83.3, 406.0], [83.4, 406.0], [83.5, 407.0], [83.6, 407.0], [83.7, 408.0], [83.8, 408.0], [83.9, 418.0], [84.0, 418.0], [84.1, 422.0], [84.2, 422.0], [84.3, 423.0], [84.4, 423.0], [84.5, 426.0], [84.6, 426.0], [84.7, 428.0], [84.8, 428.0], [84.9, 434.0], [85.0, 434.0], [85.1, 434.0], [85.2, 434.0], [85.3, 438.0], [85.4, 438.0], [85.5, 439.0], [85.6, 439.0], [85.7, 440.0], [85.8, 440.0], [85.9, 440.0], [86.0, 440.0], [86.1, 440.0], [86.2, 440.0], [86.3, 441.0], [86.4, 441.0], [86.5, 441.0], [86.6, 441.0], [86.7, 441.0], [86.8, 441.0], [86.9, 441.0], [87.0, 441.0], [87.1, 442.0], [87.2, 442.0], [87.3, 443.0], [87.4, 443.0], [87.5, 444.0], [87.6, 444.0], [87.7, 452.0], [87.8, 452.0], [87.9, 452.0], [88.0, 452.0], [88.1, 452.0], [88.2, 452.0], [88.3, 454.0], [88.4, 454.0], [88.5, 457.0], [88.6, 457.0], [88.7, 463.0], [88.8, 463.0], [88.9, 470.0], [89.0, 470.0], [89.1, 473.0], [89.2, 473.0], [89.3, 475.0], [89.4, 475.0], [89.5, 475.0], [89.6, 475.0], [89.7, 481.0], [89.8, 481.0], [89.9, 481.0], [90.0, 481.0], [90.1, 482.0], [90.2, 482.0], [90.3, 482.0], [90.4, 482.0], [90.5, 484.0], [90.6, 484.0], [90.7, 486.0], [90.8, 486.0], [90.9, 488.0], [91.0, 488.0], [91.1, 496.0], [91.2, 496.0], [91.3, 501.0], [91.4, 501.0], [91.5, 504.0], [91.6, 504.0], [91.7, 535.0], [91.8, 535.0], [91.9, 580.0], [92.0, 580.0], [92.1, 595.0], [92.2, 595.0], [92.3, 600.0], [92.4, 600.0], [92.5, 602.0], [92.6, 602.0], [92.7, 604.0], [92.8, 604.0], [92.9, 608.0], [93.0, 608.0], [93.1, 635.0], [93.2, 635.0], [93.3, 636.0], [93.4, 636.0], [93.5, 640.0], [93.6, 640.0], [93.7, 646.0], [93.8, 646.0], [93.9, 666.0], [94.0, 666.0], [94.1, 705.0], [94.2, 705.0], [94.3, 713.0], [94.4, 713.0], [94.5, 717.0], [94.6, 717.0], [94.7, 717.0], [94.8, 717.0], [94.9, 720.0], [95.0, 720.0], [95.1, 742.0], [95.2, 742.0], [95.3, 754.0], [95.4, 754.0], [95.5, 757.0], [95.6, 757.0], [95.7, 764.0], [95.8, 764.0], [95.9, 778.0], [96.0, 778.0], [96.1, 793.0], [96.2, 793.0], [96.3, 814.0], [96.4, 814.0], [96.5, 854.0], [96.6, 854.0], [96.7, 855.0], [96.8, 855.0], [96.9, 858.0], [97.0, 858.0], [97.1, 903.0], [97.2, 903.0], [97.3, 922.0], [97.4, 922.0], [97.5, 970.0], [97.6, 970.0], [97.7, 991.0], [97.8, 991.0], [97.9, 1022.0], [98.0, 1022.0], [98.1, 1023.0], [98.2, 1023.0], [98.3, 1069.0], [98.4, 1069.0], [98.5, 1303.0], [98.6, 1303.0], [98.7, 1438.0], [98.8, 1438.0], [98.9, 1524.0], [99.0, 1524.0], [99.1, 1559.0], [99.2, 1559.0], [99.3, 2017.0], [99.4, 2017.0], [99.5, 2462.0], [99.6, 2462.0], [99.7, 9797.0], [99.8, 9797.0], [99.9, 15004.0], [100.0, 15004.0]], "isOverall": false, "label": "Health Facility", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 302.0, "series": [{"data": [[2100.0, 1.0], [8600.0, 1.0], [600.0, 85.0], [700.0, 28.0], [800.0, 14.0], [3200.0, 1.0], [900.0, 12.0], [4000.0, 1.0], [1000.0, 9.0], [1100.0, 9.0], [1200.0, 19.0], [4700.0, 1.0], [18700.0, 1.0], [1300.0, 14.0], [1400.0, 9.0], [1500.0, 8.0], [400.0, 96.0], [1600.0, 5.0], [7100.0, 1.0], [1800.0, 1.0], [500.0, 184.0]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[2300.0, 1.0], [2400.0, 2.0], [600.0, 7.0], [2600.0, 1.0], [700.0, 8.0], [2700.0, 1.0], [10900.0, 1.0], [200.0, 297.0], [800.0, 9.0], [900.0, 3.0], [1000.0, 4.0], [300.0, 131.0], [5600.0, 2.0], [400.0, 29.0], [1600.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[8500.0, 1.0], [9000.0, 1.0], [600.0, 6.0], [2500.0, 1.0], [700.0, 10.0], [2900.0, 1.0], [3100.0, 1.0], [200.0, 302.0], [800.0, 9.0], [900.0, 3.0], [1000.0, 7.0], [4200.0, 1.0], [1100.0, 3.0], [300.0, 118.0], [1200.0, 1.0], [5600.0, 1.0], [400.0, 26.0], [6400.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[600.0, 9.0], [2400.0, 1.0], [9700.0, 1.0], [700.0, 11.0], [200.0, 274.0], [800.0, 4.0], [900.0, 4.0], [15000.0, 1.0], [1000.0, 3.0], [300.0, 135.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 2.0], [400.0, 47.0], [500.0, 5.0], [2000.0, 1.0]], "isOverall": false, "label": "Health Facility", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1459.0, "series": [{"data": [[0.0, 1459.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 493.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 27.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 88.86750000000013, "minX": 1.67595132E12, "maxY": 88.86750000000013, "series": [{"data": [[1.67595132E12, 88.86750000000013]], "isOverall": false, "label": "Health Financing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67595132E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 202.0, "minX": 1.0, "maxY": 18775.0, "series": [{"data": [[4.0, 18775.0], [7.0, 8606.0], [10.0, 3286.0], [31.0, 858.0], [32.0, 487.3333333333333], [34.0, 494.2857142857143], [35.0, 508.6666666666667], [37.0, 462.0], [38.0, 445.0], [39.0, 440.0], [41.0, 458.0], [44.0, 455.0], [46.0, 479.0], [47.0, 469.0], [48.0, 483.0], [49.0, 581.0], [50.0, 525.5], [53.0, 464.0], [52.0, 476.0], [54.0, 499.8], [56.0, 453.75], [57.0, 465.0], [58.0, 519.3333333333334], [60.0, 496.0], [62.0, 553.0], [64.0, 509.3333333333333], [67.0, 515.0], [68.0, 532.6], [70.0, 569.2857142857142], [71.0, 508.6666666666667], [69.0, 572.6666666666666], [74.0, 511.99999999999994], [75.0, 619.0], [72.0, 498.25], [73.0, 492.5], [76.0, 723.32], [77.0, 520.4736842105264], [79.0, 618.315789473684], [78.0, 564.9000000000001], [82.0, 582.0], [80.0, 637.0588235294117], [81.0, 624.5263157894735], [83.0, 557.1052631578947], [87.0, 589.909090909091], [84.0, 515.7], [85.0, 627.578947368421], [86.0, 563.0], [88.0, 573.0], [89.0, 594.7142857142857], [90.0, 609.4], [91.0, 535.0], [92.0, 558.0], [98.0, 905.5], [99.0, 867.5], [101.0, 945.75], [100.0, 913.5], [102.0, 551.0], [105.0, 968.0], [106.0, 1007.0], [104.0, 482.0], [108.0, 1077.0], [110.0, 1069.0], [111.0, 482.5], [114.0, 1141.0], [115.0, 520.6666666666666], [112.0, 485.0], [116.0, 763.6666666666666], [117.0, 690.6], [119.0, 539.6666666666666], [118.0, 569.0], [124.0, 675.5], [125.0, 557.0], [130.0, 1506.0], [132.0, 1500.0], [129.0, 3806.0], [133.0, 843.8333333333334], [135.0, 1339.0555555555557], [134.0, 1235.0], [137.0, 1070.3846153846155], [136.0, 1335.5], [138.0, 1066.2857142857144], [140.0, 1039.6875000000002], [141.0, 1114.7777777777778], [142.0, 924.3636363636365], [139.0, 1216.7]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[90.77200000000008, 781.6579999999998]], "isOverall": false, "label": "Demographics-Aggregated", "isController": false}, {"data": [[2.0, 2605.0], [5.0, 1616.0], [8.0, 6401.0], [9.0, 446.0], [10.0, 5656.0], [12.0, 2585.5], [23.0, 233.0], [26.0, 228.0], [27.0, 229.0], [30.0, 223.5], [31.0, 238.8], [32.0, 219.0], [37.0, 269.5], [38.0, 306.5], [43.0, 330.0], [42.0, 327.5], [47.0, 388.0], [49.0, 361.0], [50.0, 326.3333333333333], [55.0, 227.0], [54.0, 238.5], [56.0, 262.0], [58.0, 271.0], [63.0, 248.0], [64.0, 275.0], [65.0, 253.5], [66.0, 293.0], [67.0, 296.875], [68.0, 263.5], [70.0, 280.54545454545456], [71.0, 275.25], [69.0, 263.6], [74.0, 256.6666666666667], [75.0, 275.91666666666663], [72.0, 279.8], [73.0, 251.44444444444446], [76.0, 270.1851851851852], [77.0, 440.05555555555554], [79.0, 313.77777777777777], [78.0, 273.04761904761904], [80.0, 323.0909090909091], [83.0, 312.6818181818182], [81.0, 301.3076923076923], [82.0, 306.89473684210526], [84.0, 286.8571428571429], [85.0, 273.3846153846154], [87.0, 327.0833333333333], [86.0, 305.0], [88.0, 343.625], [91.0, 297.0], [90.0, 336.2], [89.0, 319.6666666666667], [93.0, 383.0], [92.0, 294.3333333333333], [99.0, 711.0], [98.0, 643.6666666666667], [103.0, 733.0], [101.0, 1613.0], [100.0, 687.6666666666666], [102.0, 312.6666666666667], [108.0, 373.4], [110.0, 232.0], [111.0, 236.33333333333334], [115.0, 258.0], [118.0, 251.14285714285714], [116.0, 236.8181818181818], [117.0, 230.33333333333334], [119.0, 260.52941176470586], [122.0, 242.0], [121.0, 208.0], [126.0, 259.0], [125.0, 254.0], [131.0, 803.0], [132.0, 1189.8], [135.0, 607.6], [133.0, 865.0], [134.0, 871.0], [129.0, 299.0], [137.0, 410.8], [136.0, 283.8], [139.0, 328.75], [143.0, 349.5], [140.0, 388.0], [141.0, 411.0], [138.0, 324.3333333333333], [142.0, 259.6], [1.0, 1074.0]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[88.01400000000004, 396.5999999999998]], "isOverall": false, "label": "Health Finance-Aggregated", "isController": false}, {"data": [[2.0, 1244.0], [3.0, 8542.0], [4.0, 1045.0], [5.0, 5628.0], [6.0, 9007.0], [7.0, 6468.0], [8.0, 1879.0], [9.0, 549.0], [10.0, 2954.0], [11.0, 1019.0], [12.0, 2599.0], [13.0, 223.0], [14.0, 218.0], [15.0, 220.0], [16.0, 211.0], [17.0, 244.0], [18.0, 242.0], [19.0, 242.0], [20.0, 202.0], [21.0, 238.0], [22.0, 205.0], [23.0, 244.0], [24.0, 217.0], [25.0, 208.0], [26.0, 243.0], [27.0, 231.0], [28.0, 228.0], [29.0, 228.0], [30.0, 231.0], [31.0, 239.0], [33.0, 235.0], [32.0, 220.0], [35.0, 234.0], [34.0, 234.0], [37.0, 233.0], [36.0, 234.0], [39.0, 323.0], [38.0, 267.0], [41.0, 402.0], [40.0, 318.0], [43.0, 328.0], [42.0, 393.0], [45.0, 305.0], [44.0, 297.0], [47.0, 352.0], [46.0, 316.0], [49.0, 361.0], [48.0, 377.0], [51.0, 232.0], [50.0, 353.0], [53.0, 225.0], [52.0, 236.0], [55.0, 240.0], [54.0, 224.0], [57.0, 3193.0], [56.0, 232.0], [59.0, 274.0], [58.0, 220.0], [61.0, 274.0], [60.0, 275.0], [63.0, 268.0], [62.0, 288.0], [67.0, 245.0], [65.0, 239.5], [70.0, 262.75], [71.0, 267.2857142857143], [69.0, 257.99999999999994], [68.0, 265.0], [74.0, 283.4444444444444], [73.0, 254.5], [72.0, 300.0], [75.0, 381.53846153846155], [77.0, 274.0714285714286], [78.0, 295.13636363636374], [76.0, 292.55], [79.0, 267.9], [80.0, 332.19047619047615], [83.0, 304.30434782608694], [82.0, 323.0], [81.0, 326.2307692307692], [87.0, 299.3076923076923], [86.0, 283.1666666666667], [85.0, 250.0], [84.0, 269.8666666666666], [88.0, 317.28571428571433], [91.0, 271.5], [90.0, 324.2], [89.0, 299.59999999999997], [95.0, 283.0], [94.0, 283.0], [93.0, 285.0], [92.0, 293.3333333333333], [99.0, 509.0], [98.0, 605.0], [97.0, 429.0], [96.0, 281.0], [101.0, 422.7777777777777], [103.0, 730.0], [102.0, 515.0], [100.0, 682.6666666666666], [106.0, 749.5], [105.0, 490.0], [104.0, 337.6666666666667], [107.0, 237.0], [111.0, 230.5], [110.0, 236.0], [109.0, 248.0], [108.0, 238.5], [115.0, 244.5], [114.0, 256.0], [113.0, 239.0], [112.0, 234.0], [119.0, 244.85714285714286], [118.0, 249.0], [117.0, 246.5], [116.0, 247.0], [123.0, 266.0], [122.0, 228.5], [121.0, 223.0], [120.0, 247.5], [127.0, 292.0], [126.0, 293.0], [125.0, 268.5], [124.0, 267.0], [132.0, 660.3333333333334], [131.0, 433.25], [130.0, 825.0], [135.0, 650.5], [134.0, 1012.5], [133.0, 709.0], [129.0, 300.0], [128.0, 300.0], [136.0, 691.8888888888888], [138.0, 464.1666666666667], [137.0, 477.0], [142.0, 349.42857142857144], [143.0, 348.0], [141.0, 324.4], [140.0, 351.33333333333337], [139.0, 328.6666666666667], [1.0, 4202.0]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[85.84000000000003, 419.1520000000001]], "isOverall": false, "label": "Diseas Surveillance-Aggregated", "isController": false}, {"data": [[2.0, 1559.0], [5.0, 15004.0], [6.0, 1524.0], [10.0, 5280.5], [23.0, 242.0], [37.0, 278.0], [38.0, 287.0], [41.0, 304.0], [42.0, 330.0], [46.0, 271.5], [47.0, 331.3333333333333], [48.0, 289.0], [49.0, 295.0], [50.0, 231.5], [53.0, 258.0], [52.0, 266.0], [54.0, 250.0], [55.0, 248.66666666666666], [56.0, 218.0], [57.0, 235.0], [61.0, 280.0], [60.0, 264.0], [62.0, 303.0], [63.0, 264.0], [64.0, 275.0], [66.0, 306.0], [67.0, 301.5], [68.0, 264.6470588235294], [70.0, 292.4444444444444], [71.0, 273.0], [69.0, 270.625], [73.0, 276.00000000000006], [74.0, 283.5], [75.0, 245.2142857142857], [72.0, 293.0], [76.0, 276.81249999999994], [77.0, 298.7619047619048], [79.0, 363.05882352941177], [78.0, 303.65], [80.0, 445.5277777777777], [83.0, 358.68421052631584], [81.0, 338.5], [82.0, 282.8666666666667], [85.0, 296.35714285714283], [84.0, 266.4666666666667], [87.0, 310.22222222222223], [86.0, 290.69999999999993], [89.0, 322.75], [90.0, 546.4], [88.0, 298.0], [91.0, 379.0], [92.0, 285.5], [98.0, 619.3333333333333], [99.0, 500.3333333333333], [96.0, 2017.0], [101.0, 621.6], [100.0, 705.0], [102.0, 333.0], [105.0, 742.0], [106.0, 757.0], [104.0, 235.0], [108.0, 352.5], [110.0, 382.0], [111.0, 244.0], [115.0, 255.5], [112.0, 277.0], [118.0, 262.66666666666674], [116.0, 245.33333333333334], [119.0, 252.75000000000003], [125.0, 265.0], [131.0, 803.5], [132.0, 922.0], [133.0, 879.0], [135.0, 480.2], [134.0, 572.6666666666666], [129.0, 312.0], [136.0, 715.5], [137.0, 426.25], [139.0, 444.6], [140.0, 324.3], [142.0, 320.7241379310346], [141.0, 327.2500000000001], [143.0, 440.5], [138.0, 282.0]], "isOverall": false, "label": "Health Facility", "isController": false}, {"data": [[90.84199999999991, 399.5300000000001]], "isOverall": false, "label": "Health Facility-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 143.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4891.666666666667, "minX": 1.67595132E12, "maxY": 254000.0, "series": [{"data": [[1.67595132E12, 254000.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67595132E12, 4891.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67595132E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 396.5999999999998, "minX": 1.67595132E12, "maxY": 781.6579999999998, "series": [{"data": [[1.67595132E12, 781.6579999999998]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[1.67595132E12, 396.5999999999998]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[1.67595132E12, 419.1520000000001]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[1.67595132E12, 399.5300000000001]], "isOverall": false, "label": "Health Facility", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67595132E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 345.8019999999996, "minX": 1.67595132E12, "maxY": 726.1200000000001, "series": [{"data": [[1.67595132E12, 726.1200000000001]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[1.67595132E12, 345.8019999999996]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[1.67595132E12, 363.45599999999996]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[1.67595132E12, 347.172]], "isOverall": false, "label": "Health Facility", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67595132E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67595132E12, "maxY": 340.2739999999998, "series": [{"data": [[1.67595132E12, 340.2739999999998]], "isOverall": false, "label": "Demographics", "isController": false}, {"data": [[1.67595132E12, 0.0]], "isOverall": false, "label": "Health Finance", "isController": false}, {"data": [[1.67595132E12, 0.0]], "isOverall": false, "label": "Diseas Surveillance", "isController": false}, {"data": [[1.67595132E12, 0.0]], "isOverall": false, "label": "Health Facility", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67595132E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 202.0, "minX": 1.67595132E12, "maxY": 1901.0, "series": [{"data": [[1.67595132E12, 1901.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67595132E12, 202.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67595132E12, 717.6000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67595132E12, 1520.52]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67595132E12, 315.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67595132E12, 1011.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67595132E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 238.0, "minX": 1.0, "maxY": 8542.0, "series": [{"data": [[134.0, 323.0], [2.0, 1401.5], [150.0, 266.0], [179.0, 293.0], [184.0, 314.0], [189.0, 332.0], [198.0, 347.0], [3.0, 1032.0], [258.0, 670.0], [16.0, 238.0], [4.0, 446.0], [1.0, 1524.0], [88.0, 717.0], [366.0, 267.0], [26.0, 467.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[258.0, 3618.5], [16.0, 5684.0], [2.0, 7117.0], [4.0, 5656.0], [1.0, 5335.0], [150.0, 3193.0], [88.0, 2482.0], [366.0, 2778.0], [189.0, 3277.5], [198.0, 2127.0], [3.0, 8542.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 366.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 238.0, "minX": 1.0, "maxY": 2417.5, "series": [{"data": [[134.0, 323.0], [2.0, 867.0], [150.0, 266.0], [179.0, 293.0], [184.0, 314.0], [189.0, 332.0], [198.0, 347.0], [3.0, 860.0], [258.0, 670.0], [16.0, 238.0], [4.0, 446.0], [1.0, 750.0], [88.0, 717.0], [366.0, 267.0], [26.0, 467.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[258.0, 2417.5], [16.0, 1496.0], [2.0, 2368.5], [4.0, 2046.0], [1.0, 1067.5], [150.0, 1352.0], [88.0, 1535.0], [366.0, 1533.0], [189.0, 1174.0], [198.0, 1595.0], [3.0, 1966.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 366.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.67595132E12, "maxY": 33.333333333333336, "series": [{"data": [[1.67595132E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67595132E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.67595132E12, "maxY": 33.333333333333336, "series": [{"data": [[1.67595132E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67595132E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.67595132E12, "maxY": 8.266666666666667, "series": [{"data": [[1.67595132E12, 0.11666666666666667]], "isOverall": false, "label": "Demographics-failure", "isController": false}, {"data": [[1.67595132E12, 0.13333333333333333]], "isOverall": false, "label": "Health Finance-failure", "isController": false}, {"data": [[1.67595132E12, 8.2]], "isOverall": false, "label": "Health Finance-success", "isController": false}, {"data": [[1.67595132E12, 8.216666666666667]], "isOverall": false, "label": "Demographics-success", "isController": false}, {"data": [[1.67595132E12, 0.06666666666666667]], "isOverall": false, "label": "Health Facility-failure", "isController": false}, {"data": [[1.67595132E12, 8.266666666666667]], "isOverall": false, "label": "Health Facility-success", "isController": false}, {"data": [[1.67595132E12, 8.2]], "isOverall": false, "label": "Diseas Surveillance-success", "isController": false}, {"data": [[1.67595132E12, 0.13333333333333333]], "isOverall": false, "label": "Diseas Surveillance-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67595132E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.45, "minX": 1.67595132E12, "maxY": 32.88333333333333, "series": [{"data": [[1.67595132E12, 32.88333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.67595132E12, 0.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67595132E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

